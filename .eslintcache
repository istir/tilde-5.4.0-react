[{"E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\index.js":"1","E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\reportWebVitals.js":"2","E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\App.js":"3","E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\Clock.js":"4","E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\console.js":"5","E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\Background.js":"6","E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\Sites.js":"7","E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\Form.js":"8","E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\FrequentBookmarks.js":"9","E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\FirstLaunch.js":"10"},{"size":517,"mtime":1612454971453,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1612454971538,"results":"13","hashOfConfig":"12"},{"size":4815,"mtime":1612634864521,"results":"14","hashOfConfig":"12"},{"size":1916,"mtime":1612549574190,"results":"15","hashOfConfig":"12"},{"size":3153,"mtime":1612633337537,"results":"16","hashOfConfig":"12"},{"size":6501,"mtime":1612454971440,"results":"17","hashOfConfig":"12"},{"size":5581,"mtime":1612633846223,"results":"18","hashOfConfig":"12"},{"size":6866,"mtime":1612633634815,"results":"19","hashOfConfig":"12"},{"size":1420,"mtime":1612633751870,"results":"20","hashOfConfig":"12"},{"size":1280,"mtime":1612634947710,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"uiq8qk",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\index.js",[],["48","49"],"E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\reportWebVitals.js",[],"E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\App.js",["50","51","52","53"],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport Clock from \"./Clock\";\r\n// import \"./consoleSmall\";\r\n// import Config from \"./Config.json\";\r\nimport Console from \"./console\";\r\nimport \"./owfont-master/css/owfont-regular.css\";\r\nimport \"./product-sans/GoogleSans.css\";\r\nimport Background from \"./Background\";\r\nimport FirstLaunch from \"./FirstLaunch\";\r\nvar ls = require(\"local-storage\");\r\n// const Clock = React.lazy(() => import(\"./Clock\"));\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { blurred: true, blackingOut: false };\r\n\r\n    //LOCAL STORAGE DIRTY \"SET\"\r\n    // for (let i = 0; i < Object.keys(Config).length; i++) {\r\n    //   // console.log(Object.keys(Config)[i], Object.values(Config)[i]);\r\n    //   ls.set(Object.keys(Config)[i], Object.values(Config)[i]);\r\n    // }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.addEventListener(\"keydown\", (e) => {\r\n      if (document.activeElement == document.body) {\r\n        if (document.getElementsByTagName(\"input\").length > 0) {\r\n          document.getElementsByTagName(\"input\")[0].focus();\r\n        }\r\n      }\r\n    });\r\n    document.body.addEventListener(\"mousemove\", (e) => {\r\n      this.setState({ blackingOut: false });\r\n      this.handleBlackingTimeout();\r\n    });\r\n    document.onvisibilitychange = (e) => {\r\n      this.setState({ blackingOut: false });\r\n      this.handleBlackingTimeout();\r\n    };\r\n  }\r\n\r\n  setBlackingOut(value) {\r\n    this.setState({ blackingOut: value });\r\n  }\r\n\r\n  handleBlackingTimeout() {\r\n    if (ls.get(\"blackingOutTimeout\") > 0) {\r\n      this.setBlackingTimeout(ls.get(\"blackingOutTimeout\"));\r\n    }\r\n  }\r\n  setBlackingTimeout(value) {\r\n    this.clearBlackingTimeout();\r\n    this.blackingTimerID = setTimeout(() => {\r\n      this.setBlackingOut(true);\r\n    }, value);\r\n  }\r\n  clearBlackingTimeout() {\r\n    // console.log(\"clear\");\r\n    if (this.blackingTimerID) {\r\n      clearTimeout(this.blackingTimerID);\r\n    }\r\n  }\r\n\r\n  setBlur(value) {\r\n    this.setState({ blurred: value });\r\n  }\r\n  getBlur() {\r\n    if (this.state.blurred) {\r\n      // return Config.blurStrength;\r\n      return ls.get(\"blurStrength\");\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  getDimPercent() {\r\n    if (this.state.blurred) {\r\n      return ls.get(\"dimPercentage\");\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // <div  className={`App ${\r\n      //   this.state.blackingOut ? \"blackingOut\" : \"\"\r\n      // }`}>\r\n\r\n      // {!ls.get(\"firstLaunchDone\")\r\n      //   <FirstLaunch />;\r\n      //   console.log(\"TODO\");\r\n      // }}\r\n      <div className=\"App\">\r\n        {!ls.get(\"firstLaunchDone\") ? (\r\n          <FirstLaunch />\r\n        ) : (\r\n          <div>\r\n            {\" \"}\r\n            <div\r\n              className=\"Background\"\r\n              style={{\r\n                backgroundImage: `url(${ls.get(\"background\")})`,\r\n                // filter: `blur(${this.getBlur()}px) brightness(${\r\n                //   1 - Config.dimPercentage / 100\r\n                // })`,\r\n              }}\r\n            ></div>\r\n            <div\r\n              className={`backgroundBlur ${\r\n                this.state.blackingOut\r\n                  ? \"blackingOut blackingOutBackground\"\r\n                  : \"\"\r\n              }`}\r\n              style={{\r\n                backdropFilter: `blur(${this.getBlur()}px) brightness(${\r\n                  1 - this.getDimPercent() / 100\r\n                })`,\r\n              }}\r\n              onClick={() => {\r\n                this.setState({ blurred: false });\r\n              }}\r\n            ></div>\r\n            {/* <div className=\"Clock\"> */}\r\n            {/* <Background /> */}\r\n            <Console\r\n              // blackingOut={this.setBlackingOut.bind(this)}\r\n              isBlackingOut={this.state.blackingOut}\r\n              blackingOutTimeout={this.handleBlackingTimeout.bind(this)}\r\n              isBlurred={this.state.blurred}\r\n              blurredState={this.setBlur.bind(this)}\r\n            />\r\n            {/* <Clock /> */}\r\n            {/* <div className=\"Clock\">TEXT</div> */}\r\n            {/* </div> */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// function App() {\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div\r\n//         className=\"Background\"\r\n//         style={{\r\n//           backgroundImage: `url(${Config.background})`,\r\n//           filter: `blur(${Config.blurStrength}px) brightness(${\r\n//             1 - Config.dimPercentage / 100\r\n//           })`,\r\n//         }}\r\n//       ></div>\r\n//       {/* <div className=\"Clock\"> */}\r\n//       {/* <Background /> */}\r\n//       <Console />\r\n//       {/* <Clock /> */}\r\n//       {/* <div className=\"Clock\">TEXT</div> */}\r\n//       {/* </div> */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n","E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\Clock.js",[],"E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\console.js",["54"],"import React from \"react\";\r\nimport Clock from \"./Clock\";\r\nimport Form from \"./Form\";\r\nimport Sites from \"./Sites\";\r\nimport FrequentBookmarks from \"./FrequentBookmarks\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n// import Config from \"./Config.json\";\r\nvar ls = require(\"local-storage\");\r\n// class ConsoleSmall extends React.Component {}\r\n// class ConsoleBig extends React.Component {}\r\nclass Console extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = { isToggled: this.props.isBlurred, text: \"\" };\r\n    this.state = { text: \"\" };\r\n    this.handleIdleTimeout();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.setState({ isToggled: this.props.isBlurred });\r\n    this.idleTimerID = null;\r\n  }\r\n\r\n  toggle() {\r\n    // this.setState((state) => ({\r\n    //   isToggled: !state.isToggled,\r\n    // }));\r\n    this.props.blurredState(!this.props.isBlurred);\r\n    this.handleIdleTimeout();\r\n  }\r\n\r\n  handleIdleTimeout() {\r\n    // if (this.state.isToggled) {\r\n    // console.log(\"???\");\r\n    // clearTimeout(this.timerID);\r\n    //   this.clearTimeout();\r\n    // } else if (!this.state.isToggled) {\r\n    if (ls.get(\"timeout\") > 0) {\r\n      this.setIdleTimeout(ls.get(\"timeout\"));\r\n    }\r\n\r\n    // }\r\n  }\r\n  setIdleTimeout(value) {\r\n    this.clearIdleTimeout();\r\n    this.idleTimerID = setTimeout(() => {\r\n      // this.setState({ isToggled: false });\r\n      this.props.blurredState(false);\r\n      // this.handleBlackingTimeout();\r\n      this.props.blackingOutTimeout();\r\n    }, value);\r\n  }\r\n  clearIdleTimeout() {\r\n    // console.log(\"clear\");\r\n    if (this.idleTimerID) {\r\n      clearTimeout(this.idleTimerID);\r\n    }\r\n  }\r\n\r\n  setSameText(text) {\r\n    this.setState({ text: text });\r\n    // console.log(this.state.text);\r\n  }\r\n  render() {\r\n    return (\r\n      //is this ok?\r\n\r\n      <div>\r\n        {\r\n          /* <div\r\n          className={`consoleSmall ${this.state.isToggled ? \"small\" : \"big\"}`}\r\n        >*/\r\n          <Sites\r\n            setText={this.setSameText.bind(this)}\r\n            clearTimeout={this.handleIdleTimeout.bind(this)}\r\n            toggle={this.toggle.bind(this)}\r\n            shown={this.props.isBlurred}\r\n            defaultText={this.state.text}\r\n            // class={`${this.state.isToggled ? \"small\" : \"big\"} slideUp`}\r\n            class={`slideUp`}\r\n          />\r\n        }\r\n\r\n        <CSSTransition\r\n          // in={!this.state.isToggled}\r\n          in={!this.props.isBlurred}\r\n          timeout={200}\r\n          classNames=\"overlayForm\"\r\n          unmountOnExit\r\n        >\r\n          <div className=\"consoleSmall\">\r\n            {/* <div onClick={this.toggle.bind(this)}> */}\r\n            {/* <div> */}\r\n            <Clock class=\"backgroundClock\" onClick={this.toggle.bind(this)} />\r\n            {/* </div> */}\r\n\r\n            <Form\r\n              isBlackingOut={this.props.isBlackingOut}\r\n              defaultText={this.state.text}\r\n              setText={this.setSameText.bind(this)}\r\n              class=\"backgroundForm\"\r\n              renderBookmarks={true}\r\n            />\r\n          </div>\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Console;\r\n","E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\Background.js",["55","56"],"import React from \"react\";\r\nimport { Stage, Layer, Rect, Text } from \"react-konva\";\r\nimport Konva from \"konva\";\r\nclass ColoredRect extends React.Component {\r\n  state = {\r\n    color: \"green\",\r\n  };\r\n  handleClick = () => {\r\n    this.setState({\r\n      color: Konva.Util.getRandomColor(),\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Rect\r\n        x={20}\r\n        y={20}\r\n        width={50}\r\n        height={50}\r\n        fill={this.state.color}\r\n        shadowBlur={5}\r\n        onClick={this.handleClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nclass Particle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      x: this.props.X,\r\n      y: this.props.Y,\r\n      vx: this.props.velocityX,\r\n      vy: this.props.velocityY,\r\n      ax: this.props.velocityY,\r\n      ay: this.props.accelerationX,\r\n      color: Konva.Util.getRandomColor(),\r\n      //   timer: this.props.timer,\r\n    };\r\n    // console.log(this.props.X);\r\n    // this.state.timer;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => {\r\n      this.move();\r\n    }, 1000 / 60);\r\n  }\r\n  move() {\r\n    var newWidth = this.state.x + this.state.vx;\r\n    var newHeight = this.state.y + this.state.vy;\r\n    // console.log(this.state.x, this.state.y);\r\n    this.setState({\r\n      x: newWidth >= window.innerWidth ? 0 : newWidth,\r\n      y: newHeight >= window.innerHeight ? 0 : newHeight,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Rect\r\n        x={this.state.x}\r\n        y={this.state.y}\r\n        width={10}\r\n        height={10}\r\n        fill={this.state.color}\r\n      />\r\n    );\r\n  }\r\n}\r\nclass Background extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.particles = [];\r\n    for (let i = 0; i < 50; i++) {\r\n      this.particles.push(\r\n        <Particle\r\n          X={Math.random() * Math.floor(200)}\r\n          Y={Math.random() * Math.floor(200)}\r\n          velocityX={Math.random() * Math.floor(2)}\r\n          velocityY={Math.random() * Math.floor(2)}\r\n        />\r\n      );\r\n    }\r\n    // console.log(this.particles);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <Stage width={window.innerWidth} height={window.innerHeight}>\r\n        <Layer>\r\n          {/* <Text text=\"Try click on rect\" /> */}\r\n          {/* <Particle\r\n            X={500}\r\n            Y={200}\r\n            velocityX={1}\r\n            velocityY={1}\r\n            timer={this.timerID}\r\n          /> */}\r\n          {this.particles}\r\n          {/* <ColoredRect /> */}\r\n        </Layer>\r\n      </Stage>\r\n    );\r\n  }\r\n}\r\nexport default Background;\r\n// /*--------------------\r\n// Vars\r\n// --------------------*/\r\n// const deg = (a) => (Math.PI / 180) * a;\r\n// const rand = (v1, v2) => Math.floor(v1 + Math.random() * (v2 - v1));\r\n// const opt = {\r\n//   particles: window.width / 500 ? 1000 : 500,\r\n//   noiseScale: 0.009,\r\n//   angle: (Math.PI / 180) * -90,\r\n//   h1: rand(0, 360),\r\n//   h2: rand(0, 360),\r\n//   s1: rand(20, 90),\r\n//   s2: rand(20, 90),\r\n//   l1: rand(30, 80),\r\n//   l2: rand(30, 80),\r\n//   strokeWeight: 1.2,\r\n//   tail: 82,\r\n// };\r\n// const Particles = [];\r\n// let time = 0;\r\n// document.body.addEventListener(\"click\", () => {\r\n//   opt.h1 = rand(0, 360);\r\n//   opt.h2 = rand(0, 360);\r\n//   opt.s1 = rand(20, 90);\r\n//   opt.s2 = rand(20, 90);\r\n//   opt.l1 = rand(30, 80);\r\n//   opt.l2 = rand(30, 80);\r\n//   opt.angle += deg(random(60, 60)) * (Math.random() > 0.5 ? 1 : -1);\r\n\r\n//   for (let p of Particles) {\r\n//     p.randomize();\r\n//   }\r\n// });\r\n\r\n// /*--------------------\r\n// Particle\r\n// --------------------*/\r\n// class Particle {\r\n//   constructor(x, y) {\r\n//     this.x = x;\r\n//     this.y = y;\r\n//     this.lx = x;\r\n//     this.ly = y;\r\n//     this.vx = 0;\r\n//     this.vy = 0;\r\n//     this.ax = 0;\r\n//     this.ay = 0;\r\n//     this.hueSemen = Math.random();\r\n//     this.hue = this.hueSemen > 0.5 ? 20 + opt.h1 : 20 + opt.h2;\r\n//     this.sat = this.hueSemen > 0.5 ? opt.s1 : opt.s2;\r\n//     this.light = this.hueSemen > 0.5 ? opt.l1 : opt.l2;\r\n//     this.maxSpeed = this.hueSemen > 0.5 ? 3 : 2;\r\n//   }\r\n\r\n//   randomize() {\r\n//     this.hueSemen = Math.random();\r\n//     this.hue = this.hueSemen > 0.5 ? 20 + opt.h1 : 20 + opt.h2;\r\n//     this.sat = this.hueSemen > 0.5 ? opt.s1 : opt.s2;\r\n//     this.light = this.hueSemen > 0.5 ? opt.l1 : opt.l2;\r\n//     this.maxSpeed = this.hueSemen > 0.5 ? 3 : 2;\r\n//   }\r\n\r\n//   update() {\r\n//     this.follow();\r\n\r\n//     this.vx += this.ax;\r\n//     this.vy += this.ay;\r\n\r\n//     var p = Math.sqrt(this.vx * this.vx + this.vy * this.vy);\r\n//     var a = Math.atan2(this.vy, this.vx);\r\n//     var m = Math.min(this.maxSpeed, p);\r\n//     this.vx = Math.cos(a) * m;\r\n//     this.vy = Math.sin(a) * m;\r\n\r\n//     this.x += this.vx;\r\n//     this.y += this.vy;\r\n//     this.ax = 0;\r\n//     this.ay = 0;\r\n\r\n//     this.edges();\r\n//   }\r\n\r\n//   follow() {\r\n//     let angle =\r\n//       noise(\r\n//         this.x * opt.noiseScale,\r\n//         this.y * opt.noiseScale,\r\n//         time * opt.noiseScale\r\n//       ) *\r\n//         Math.PI *\r\n//         0.5 +\r\n//       opt.angle;\r\n\r\n//     this.ax += Math.cos(angle);\r\n//     this.ay += Math.sin(angle);\r\n//   }\r\n\r\n//   updatePrev() {\r\n//     this.lx = this.x;\r\n//     this.ly = this.y;\r\n//   }\r\n\r\n//   edges() {\r\n//     if (this.x < 0) {\r\n//       this.x = width;\r\n//       this.updatePrev();\r\n//     }\r\n//     if (this.x > width) {\r\n//       this.x = 0;\r\n//       this.updatePrev();\r\n//     }\r\n//     if (this.y < 0) {\r\n//       this.y = height;\r\n//       this.updatePrev();\r\n//     }\r\n//     if (this.y > height) {\r\n//       this.y = 0;\r\n//       this.updatePrev();\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     stroke(`hsla(${this.hue}, ${this.sat}%, ${this.light}%, .5)`);\r\n//     line(this.x, this.y, this.lx, this.ly);\r\n//     this.updatePrev();\r\n//   }\r\n// }\r\n\r\n// /*--------------------\r\n// Setup\r\n// --------------------*/\r\n// function setup() {\r\n//   createCanvas(windowWidth, windowHeight);\r\n//   for (let i = 0; i < opt.particles; i++) {\r\n//     Particles.push(new Particle(Math.random() * width, Math.random() * height));\r\n//   }\r\n//   strokeWeight(opt.strokeWeight);\r\n// }\r\n\r\n// /*--------------------\r\n// Draw\r\n// --------------------*/\r\n// function draw() {\r\n//   time++;\r\n//   background(0, 100 - opt.tail);\r\n\r\n//   for (let p of Particles) {\r\n//     p.update();\r\n//     p.render();\r\n//   }\r\n// }\r\n\r\n// /*--------------------\r\n// Resize\r\n// --------------------*/\r\n// function windowResized() {\r\n//   resizeCanvas(windowWidth, windowHeight);\r\n// }\r\n","E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\Sites.js",["57","58"],"// import Config from \"./Config.json\";\r\nimport React from \"react\";\r\nimport Console from \"./console\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Clock from \"./Clock\";\r\nimport Form from \"./Form\";\r\nvar ls = require(\"local-storage\");\r\nclass ListCategory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.listItem = this.props.listItems.map(\r\n      (site) => (\r\n        // <li>\r\n        <ListItem\r\n          hideKeys={this.props.hideKeys}\r\n          key={site.url}\r\n          keyName={site.key}\r\n          name={site.name}\r\n          urlName={site.url}\r\n        />\r\n      )\r\n      // console.log(site.key)\r\n      // </li>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // console.log(Config.bookmarks.length);\r\n    return (\r\n      <li\r\n        className=\"category\"\r\n        style={{ maxWidth: `${100 / ls.get(\"bookmarks\").length - 5}%` }}\r\n      >\r\n        <h2 className=\"categoryName\">{this.props.categoryName}</h2>\r\n        {this.listItem}\r\n      </li>\r\n    );\r\n  }\r\n}\r\nclass ListItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul>\r\n        <li className=\"command\">\r\n          <a href={this.props.urlName}>\r\n            {this.props.hideKeys ? (\r\n              \"\"\r\n            ) : (\r\n              <span className=\"commandKey\">{this.props.keyName}</span>\r\n            )}\r\n            <span className=\"commandName\">{this.props.name}</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nclass Sites extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      shown: true,\r\n      // style: {\r\n      background: `${ls.get(\"overlayColor\")}`,\r\n      left: `0px`,\r\n      top: `0px`,\r\n      hideKeys: false,\r\n      // },\r\n    };\r\n    this.listItem = ls\r\n      .get(\"bookmarks\")\r\n      .map((site, index) => (\r\n        <ListCategory\r\n          hideKeys={this.state.hideKeys}\r\n          key={site.title}\r\n          listItems={site.list}\r\n          categoryName={site.title}\r\n        />\r\n      ));\r\n    this._element = React.createRef();\r\n    // window.addEventListener(\"resize\", this.onWindowResized.bind(this));\r\n  }\r\n  componentDidUpdate() {\r\n    // console.log(this._element.current.clientHeight);\r\n    // console.log(\"udate\");\r\n    // console.log(window.innerWidth);\r\n  }\r\n  onWindowResized() {\r\n    // this.centerHorizontally();\r\n    // this.centerVertically();\r\n    // try {\r\n    //   console.log(this._element.current.clientWidth);\r\n    // } catch (e) {}\r\n\r\n    // this.forceUpdate();\r\n\r\n    if (window.innerWidth < 500) {\r\n      // console.log(window.innerWidth);\r\n      this.setState({ hideKeys: true });\r\n      // this.listItem = Config.bookmarks.map((site, index) => (\r\n      //   <ListCategory\r\n      //     hideKeys={this.state.hideKeys}\r\n      //     key={site.title}\r\n      //     listItems={site.list}\r\n      //     categoryName={site.title}\r\n      //   />\r\n      // ));\r\n      // this.forceUpdate();\r\n    } else {\r\n      this.setState({ hideKeys: false });\r\n    }\r\n  }\r\n  centerHorizontally() {\r\n    try {\r\n      this.setState({\r\n        left: `calc((100vw - ${this._element.current.clientWidth}px) / 2)`,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        left: `calc(100vw / 2 - ${50}px)`,\r\n      });\r\n    }\r\n  }\r\n  centerVertically() {\r\n    try {\r\n      this.setState({\r\n        top: `calc(100vh / 2 - ${this._element.current.clientHeight / 2}px)`,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        top: `calc(100vh / 2 - ${50}px)`,\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      // <div className=\"overlayParent\" onClick={this.props.toggle}>\r\n      // <div className=\"overlayParent\">\r\n      <CSSTransition\r\n        in={this.props.shown}\r\n        timeout={200}\r\n        onEnter={() => {\r\n          // this.setState({\r\n          //   left: `calc(100vw / 2 - ${this.centerHorizontally()}px)`,\r\n          // });\r\n          // this.setState({\r\n          //   top: `calc(100vh / 2 - ${this.centerVertically()}px)`,\r\n          // });\r\n          // console.log(`${this.centerVertically()}px`);\r\n          this.centerHorizontally();\r\n          this.centerVertically();\r\n        }}\r\n        // mountOnEnter={true}\r\n        classNames=\"overlayParent\"\r\n        unmountOnExit\r\n      >\r\n        <div\r\n          ref={this._element}\r\n          onClick={(e) => {\r\n            // onClick={(e) => {\r\n            this.props.clearTimeout();\r\n            //   e.stopPropagation();\r\n            // }}\r\n            e.stopPropagation();\r\n          }}\r\n          onInput={() => {\r\n            this.props.clearTimeout();\r\n          }}\r\n          style={{\r\n            background: `${ls.get(\"overlayColor\")}`,\r\n            boxShadow: `${ls.get(\"overlayShadowStrength\")} ${ls.get(\r\n              \"overlayShadowColor\"\r\n            )}`,\r\n            // left: this.state.left,\r\n            // top: this.state.top,\r\n          }}\r\n          // style={this.state.style}\r\n          // style={{left:}}\r\n          // className={`overlay ${this.props.class}`}\r\n          className={`overlay`}\r\n        >\r\n          {/* <ul className={`lists ${this.props.class}`}>{this.listItem}</ul> */}\r\n          <ul className={`lists`}>{this.listItem}</ul>\r\n          <Clock class=\"overlayClock\" onClick={this.props.toggle.bind(this)} />\r\n          <Form\r\n            defaultText={this.props.defaultText}\r\n            setText={this.props.setText}\r\n            class=\"overlayForm1\"\r\n          />\r\n        </div>\r\n      </CSSTransition>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sites;\r\n","E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\Form.js",["59","60","61","62","63"],"import React from \"react\";\r\n\r\nimport FrequentBookmarks from \"./FrequentBookmarks\";\r\nvar fontColorContrast = require(\"font-color-contrast\");\r\nvar isUrl = require(\"is-url\");\r\nvar weather = require(\"openweather-apis\");\r\nvar ls = require(\"local-storage\");\r\n\r\nclass Weather extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // this.props.show\r\n\r\n    weather.setAPPID(ls.get(\"weatherAPIKey\"));\r\n    weather.setUnits(ls.get(\"weatherUnit\"));\r\n    ls.get(\"weatherLocation\") != \"auto\"\r\n      ? weather.setCity(ls.get(\"weatherLocation\"))\r\n      : weather.setCoordinate(\r\n          ls.get(\"weatherCoordinates\")[0],\r\n          ls.get(\"weatherCoordinates\")[1]\r\n        );\r\n    // console.log(this.getWeather());\r\n    // var info = this.getWeather();\r\n    // console.log(info);\r\n    this.state = {\r\n      location: null,\r\n      temperature: null,\r\n      description: null,\r\n      icon: null,\r\n      isNight: false,\r\n    };\r\n\r\n    // weather.setCoordinate(this.state.location);\r\n  }\r\n  getCurrentLocation(callback) {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        callback(position);\r\n      });\r\n    } else {\r\n      throw new Error(\"Your browser does not support geolocation.\");\r\n    }\r\n  }\r\n\r\n  getCurrentWeather(callback) {\r\n    weather.getAllWeather(function (err, JSONObj) {\r\n      // console.log(JSONObj);\r\n      callback(JSONObj);\r\n      // this.setState((state) => ({\r\n      //   temperature: JSONObj.main.temp,\r\n      // }));\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCurrentLocation((callback) => {\r\n      // console.log(callback);\r\n      // console.log(callback);\r\n      this.setState((state) => ({ location: callback }));\r\n      try {\r\n        weather.setCoordinate(\r\n          this.state.location.coords.latitude,\r\n          this.state.location.coords.longitude\r\n        );\r\n        // weather.getTemperature((err, temp) => {\r\n        //   console.log(temp);\r\n        // });\r\n        // weather.getDescription((err, temp) => {\r\n        //   console.log(temp);\r\n        // });\r\n        this.getCurrentWeather((callback) => {\r\n          // console.log(callback);\r\n          this.setState((state) => ({\r\n            temperature: Math.round(callback.main.temp),\r\n            description: callback.weather[0].main,\r\n            icon: callback.cod,\r\n            isNight:\r\n              new Date().getHours() > 20 && new Date().getHours < 6\r\n                ? true\r\n                : false,\r\n          }));\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n    // return <span>{this.state.location.coords.latitude}</span>;\r\n    // // console.log(this.state.location);\r\n    // weather.getTemperature((temp) => {\r\n    //   // console.log(temp);\r\n    // });\r\n  }\r\n\r\n  // style = {\r\n  //   color:Config.textColor,\r\n  //   filter:\"brightness(40%)\",\r\n  //   visibility: this.props.show?true:false;\r\n  // }\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"placeholderText\"\r\n        style={{\r\n          color: ls.get(\"textColor\"),\r\n          filter: \"brightness(40%)\",\r\n          opacity: this.props.show == \"true\" ? \"1\" : \"0\",\r\n        }}\r\n      >\r\n        {this.state.temperature === null ? \"\" : this.state.temperature}\r\n        <i\r\n          className={`placeholderIcon owf owf-${this.state.icon}-${\r\n            this.state.isNight ? `n` : `d`\r\n          }`}\r\n        ></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hidePlaceholder: false };\r\n    this._target = React.createRef();\r\n  }\r\n\r\n  togglePlaceholder() {\r\n    // this.setState((this.state.hidePlaceholder = !this.state.hidePlaceholder));\r\n    this.setState((state) => ({ hidePlaceholder: !state.hidePlaceholder }));\r\n  }\r\n  showPlaceholder() {\r\n    this.setState({ hidePlaceholder: false });\r\n  }\r\n  hidePlaceholder() {\r\n    this.setState({ hidePlaceholder: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._target.current.focus();\r\n  }\r\n  submitForm(e) {\r\n    // console.log(e);\r\n    // console.log(this._target.current.value);\r\n    window.open(\r\n      isUrl(this._target.current.value)\r\n        ? this._target.current.value\r\n        : ls.get(\"searchEngine\") + this._target.current.value,\r\n      \"_parent\"\r\n    );\r\n    this._target.current.value = \"\";\r\n    e.preventDefault();\r\n    // console.log();\r\n  }\r\n  ensureTextSimilarity() {\r\n    if (this._target.current) {\r\n      this.props.setText(this._target.current.value);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.submitForm.bind(this)}\r\n        className={`searchForm ${this.props.class}`}\r\n      >\r\n        {/* <i class=\"owf owf-803\"></i> */}\r\n        <div\r\n          style={{ position: \"relative\" }}\r\n          className={`${\r\n            this.props.isBlackingOut ? \"blackingOut blackingOutFilter\" : \"\"\r\n          }`}\r\n        >\r\n          <input\r\n            // className={`searchInput ${this.state.isSmall ? \"small\" : \"big\"}`}\r\n            ref={this._target}\r\n            className=\"searchInput\"\r\n            type=\"text\"\r\n            // placeholder={`${this.state.hidePlaceholder ? \"\" : \"EB28\"}`}\r\n            onChange={() => {\r\n              this.ensureTextSimilarity();\r\n              if (this._target.current.value.length == 0) {\r\n                this.showPlaceholder();\r\n              } else {\r\n                this.hidePlaceholder();\r\n              }\r\n            }}\r\n            onFocus={() => {\r\n              if (this._target.current.value.length > 0) {\r\n                this.hidePlaceholder();\r\n              }\r\n            }}\r\n            // onBlur={this.togglePlaceholder.bind(this)}\r\n            onBlur={() => {\r\n              if (this._target.current.value.length == 0) {\r\n                this.showPlaceholder();\r\n                // console.log(\"focus lost\");\r\n              }\r\n            }}\r\n            // onChangeCapture={this.togglePlaceholder.bind(this)}\r\n            // onClick={this.toggle.bind(this)}\r\n            defaultValue={this.props.defaultText}\r\n            style={{\r\n              boxShadow: `${ls.get(\"shadowStrength\")} ${ls.get(\"shadowColor\")}`,\r\n              backgroundColor: `${ls.get(\"color\")}`,\r\n              color: this.state.hidePlaceholder\r\n                ? fontColorContrast(`${ls.get(\"color\")}`) == \"#ffffff\"\r\n                  ? \"#fafafa\"\r\n                  : \"#0a0a0a\"\r\n                : \"transparent\",\r\n            }}\r\n          ></input>\r\n          {this.state.hidePlaceholder ? (\r\n            <Weather show=\"false\" />\r\n          ) : (\r\n            <Weather show=\"true\" />\r\n          )}\r\n        </div>\r\n        {this.props.renderBookmarks ? (\r\n          <FrequentBookmarks isBlackingOut={this.props.isBlackingOut} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {/* <Weather /> */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\FrequentBookmarks.js",[],"E:\\istir\\react-git\\git\\tilde-5.4.0-react\\tilde-5.4.0-react\\src\\FirstLaunch.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":12},{"ruleId":"68","severity":1,"message":"72","line":4,"column":8,"nodeType":"70","messageId":"71","endLine":4,"endColumn":13},{"ruleId":"68","severity":1,"message":"73","line":10,"column":8,"nodeType":"70","messageId":"71","endLine":10,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":29,"column":34,"nodeType":"76","messageId":"77","endLine":29,"endColumn":36},{"ruleId":"68","severity":1,"message":"78","line":5,"column":8,"nodeType":"70","messageId":"71","endLine":5,"endColumn":25},{"ruleId":"68","severity":1,"message":"79","line":2,"column":30,"nodeType":"70","messageId":"71","endLine":2,"endColumn":34},{"ruleId":"68","severity":1,"message":"80","line":4,"column":7,"nodeType":"70","messageId":"71","endLine":4,"endColumn":18},{"ruleId":"68","severity":1,"message":"81","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":15},{"ruleId":"82","severity":1,"message":"83","line":42,"column":3,"nodeType":"84","messageId":"85","endLine":44,"endColumn":4},{"ruleId":"74","severity":1,"message":"86","line":17,"column":31,"nodeType":"76","messageId":"77","endLine":17,"endColumn":33},{"ruleId":"74","severity":1,"message":"75","line":107,"column":36,"nodeType":"76","messageId":"77","endLine":107,"endColumn":38},{"ruleId":"74","severity":1,"message":"75","line":181,"column":53,"nodeType":"76","messageId":"77","endLine":181,"endColumn":55},{"ruleId":"74","severity":1,"message":"75","line":194,"column":53,"nodeType":"76","messageId":"77","endLine":194,"endColumn":55},{"ruleId":"74","severity":1,"message":"75","line":206,"column":59,"nodeType":"76","messageId":"77","endLine":206,"endColumn":61},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Clock' is defined but never used.","'Background' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'FrequentBookmarks' is defined but never used.","'Text' is defined but never used.","'ColoredRect' is defined but never used.","'Console' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]