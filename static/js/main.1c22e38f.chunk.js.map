{"version":3,"sources":["logo.svg","Clock.js","FrequentBookmarks.js","Form.js","Sites.js","console.js","Background.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","props","state","date","Date","isToggled","this","timerID","setInterval","tick","setState","clearInterval","className","style","color","Config","textColor","onClick","toggle","bind","textShadow","shadowStrength","shadowColor","getHours","getMinutes","React","Component","library","add","fab","FrequentBookmarks","listItem","frequentBookmarks","map","site","iconColor","filter","href","url","icon","size","frequentNameShown","name","fontColorContrast","require","isUrl","weather","Weather","setAPPID","setUnits","weatherUnit","weatherLocation","setCity","setCoordinate","location","temperature","description","isNight","callback","navigator","geolocation","Error","getCurrentPosition","position","getAllWeather","err","JSONObj","getCurrentLocation","console","log","coords","latitude","longitude","getCurrentWeather","Math","round","main","temp","cod","opacity","show","class","Form","hidePlaceholder","e","window","open","target","children","value","searchEngine","preventDefault","onSubmit","submitForm","type","onFocus","togglePlaceholder","onBlur","boxShadow","backgroundColor","ListCategory","listItems","keyName","key","urlName","categoryName","ListItem","Console","Particle","x","X","y","Y","vx","velocityX","vy","velocityY","ax","ay","accelerationX","Konva","Util","getRandomColor","move","newWidth","newHeight","innerWidth","innerHeight","width","height","fill","App","backgroundImage","background","blurStrength","dimPercentage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c22e38f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport Config from \"./Config.json\";\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { date: new Date(), isToggled: false };\r\n    // this.state = { isToggled: false };\r\n    // this.state.isSmall = this.state.isSmall.bind(this);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.setState({ isSmall: false });\r\n\r\n  //   // document.getElementsByClassName(\"searchInput\")[0].value = this.state.text;\r\n  // }\r\n\r\n  // toggle() {\r\n  //   this.setState((state) => ({\r\n  //     isSmall: !state.isSmall,\r\n  //   }));\r\n  // }\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => {\r\n      this.tick();\r\n    }, 1000);\r\n    this.setState({ isToggled: false });\r\n  }\r\n\r\n  toggle() {\r\n    this.setState((state) => ({\r\n      isToggled: !state.isToggled,\r\n    }));\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n  tick() {\r\n    this.setState({ date: new Date() });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //is this ok?\r\n      <div\r\n        className={`Clock ${this.state.isToggled ? \"small\" : \"big\"}`}\r\n        style={{ color: Config.textColor }}\r\n        onClick={this.toggle.bind(this)}\r\n      >\r\n        <div\r\n          className=\"Hours\"\r\n          style={{\r\n            textShadow: `${Config.shadowStrength} ${Config.shadowColor}`,\r\n          }}\r\n        >\r\n          {this.state.date.getHours()}\r\n        </div>\r\n        <div\r\n          className=\"Minutes\"\r\n          style={{\r\n            textShadow: `${Config.shadowStrength} ${Config.shadowColor}`,\r\n          }}\r\n        >\r\n          {(this.state.date.getMinutes() < 10 ? \"0\" : \"\") +\r\n            this.state.date.getMinutes()}{\" \"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Clock;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Config from \"./Config.json\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nlibrary.add(fab);\r\nclass FrequentBookmarks extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.listItem = Config.frequentBookmarks.map((site) => (\r\n      <a\r\n        style={{\r\n          color: Config.iconColor,\r\n          filter: `drop-shadow(${Config.shadowStrength} ${Config.shadowColor})`,\r\n        }}\r\n        href={site.url}\r\n        className=\"frequentBookmarkIcon\"\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={[\"fab\", site.icon]}\r\n          size={Config.frequentNameShown ? \"2x\" : \"3x\"}\r\n        />\r\n\r\n        {Config.frequentNameShown ? (\r\n          <span className=\"frequentName\">{site.name}</span>\r\n        ) : (\r\n          false\r\n        )}\r\n      </a>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"frequentBookmarks\">{this.listItem}</div>;\r\n  }\r\n}\r\nexport default FrequentBookmarks;\r\n","import React from \"react\";\r\nimport Config from \"./Config.json\";\r\nimport FrequentBookmarks from \"./FrequentBookmarks\";\r\nvar fontColorContrast = require(\"font-color-contrast\");\r\nvar isUrl = require(\"is-url\");\r\nvar weather = require(\"openweather-apis\");\r\n\r\nclass Weather extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // this.props.show\r\n\r\n    weather.setAPPID(\"fa54ebb35a166dfa6a6ef9fe7b6dcf06\");\r\n    weather.setUnits(Config.weatherUnit);\r\n    Config.weatherLocation != \"auto\"\r\n      ? weather.setCity(Config.weatherLocation)\r\n      : weather.setCoordinate(-1, 1);\r\n    // console.log(this.getWeather());\r\n    // var info = this.getWeather();\r\n    // console.log(info);\r\n    this.state = {\r\n      location: null,\r\n      temperature: null,\r\n      description: null,\r\n      icon: null,\r\n      isNight: false,\r\n    };\r\n\r\n    // weather.setCoordinate(this.state.location);\r\n  }\r\n  getCurrentLocation(callback) {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        callback(position);\r\n      });\r\n    } else {\r\n      throw new Error(\"Your browser does not support geolocation.\");\r\n    }\r\n  }\r\n\r\n  getCurrentWeather(callback) {\r\n    weather.getAllWeather(function (err, JSONObj) {\r\n      // console.log(JSONObj);\r\n      callback(JSONObj);\r\n      // this.setState((state) => ({\r\n      //   temperature: JSONObj.main.temp,\r\n      // }));\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCurrentLocation((callback) => {\r\n      // console.log(callback);\r\n      console.log(callback);\r\n      this.setState((state) => ({ location: callback }));\r\n      weather.setCoordinate(\r\n        this.state.location.coords.latitude,\r\n        this.state.location.coords.longitude\r\n      );\r\n      // weather.getTemperature((err, temp) => {\r\n      //   console.log(temp);\r\n      // });\r\n      // weather.getDescription((err, temp) => {\r\n      //   console.log(temp);\r\n      // });\r\n      this.getCurrentWeather((callback) => {\r\n        // console.log(callback);\r\n        this.setState((state) => ({\r\n          temperature: Math.round(callback.main.temp),\r\n          description: callback.weather[0].main,\r\n          icon: callback.cod,\r\n          isNight:\r\n            new Date().getHours() > 20 && new Date().getHours < 6\r\n              ? true\r\n              : false,\r\n        }));\r\n      });\r\n    });\r\n    // return <span>{this.state.location.coords.latitude}</span>;\r\n    // // console.log(this.state.location);\r\n    // weather.getTemperature((temp) => {\r\n    //   // console.log(temp);\r\n    // });\r\n  }\r\n\r\n  // style = {\r\n  //   color:Config.textColor,\r\n  //   filter:\"brightness(40%)\",\r\n  //   visibility: this.props.show?true:false;\r\n  // }\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"placeholderText\"\r\n        style={{\r\n          color: Config.textColor,\r\n          filter: \"brightness(40%)\",\r\n          opacity: this.props.show == \"true\" ? \"1\" : \"0\",\r\n        }}\r\n      >\r\n        {this.state.temperature === null ? \"\" : this.state.temperature}\r\n        <i\r\n          class={`placeholderIcon owf owf-${this.state.icon}-${\r\n            this.state.isNight ? `n` : `d`\r\n          }`}\r\n        ></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hidePlaceholder: false };\r\n  }\r\n\r\n  togglePlaceholder() {\r\n    // this.setState((this.state.hidePlaceholder = !this.state.hidePlaceholder));\r\n    this.setState((state) => ({ hidePlaceholder: !state.hidePlaceholder }));\r\n  }\r\n\r\n  submitForm(e) {\r\n    window.open(\r\n      isUrl(e.target.children[0].value)\r\n        ? e.target.children[0].value\r\n        : Config.searchEngine + e.target.children[0].value,\r\n      \"_parent\"\r\n    );\r\n    e.preventDefault();\r\n    // console.log();\r\n  }\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitForm.bind(this)} className={`searchForm`}>\r\n        {/* <i class=\"owf owf-803\"></i> */}\r\n        <input\r\n          // className={`searchInput ${this.state.isSmall ? \"small\" : \"big\"}`}\r\n          className=\"searchInput\"\r\n          type=\"text\"\r\n          // placeholder={`${this.state.hidePlaceholder ? \"\" : \"EB28\"}`}\r\n          onFocus={this.togglePlaceholder.bind(this)}\r\n          onBlur={this.togglePlaceholder.bind(this)}\r\n          // onClick={this.toggle.bind(this)}\r\n          style={{\r\n            boxShadow: `${Config.shadowStrength} ${Config.shadowColor}`,\r\n            backgroundColor: `${Config.color}`,\r\n            color:\r\n              fontColorContrast(`${Config.color}`) == \"#ffffff\"\r\n                ? \"#fafafa\"\r\n                : \"#0a0a0a\",\r\n          }}\r\n        ></input>\r\n        {this.state.hidePlaceholder ? (\r\n          <Weather show=\"false\" />\r\n        ) : (\r\n          <Weather show=\"true\" />\r\n        )}\r\n        <FrequentBookmarks />\r\n        {/* <Weather /> */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","import Config from \"./Config.json\";\r\nimport React from \"react\";\r\nimport Console from \"./console\";\r\n\r\nclass ListCategory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.listItem = this.props.listItems.map(\r\n      (site) => (\r\n        // <li>\r\n        <ListItem keyName={site.key} name={site.name} urlName={site.url} />\r\n      )\r\n      // console.log(site.key)\r\n      // </li>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li className=\"category\">\r\n        <h2 className=\"categoryName\">{this.props.categoryName}</h2>\r\n        {this.listItem}\r\n      </li>\r\n    );\r\n  }\r\n}\r\nclass ListItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul>\r\n        <li className=\"command\">\r\n          <a href={this.props.urlName}>\r\n            <span className=\"commandKey\">{this.props.keyName}</span>\r\n            <span className=\"commandName\">{this.props.name}</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nclass Sites extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.listItem = Config.bookmarks.map((site, index) => (\r\n      <ListCategory listItems={site.list} categoryName={site.title} />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return <ul className={`lists ${this.props.class}`}>{this.listItem}</ul>;\r\n  }\r\n}\r\n\r\nexport default Sites;\r\n","import React from \"react\";\r\nimport Clock from \"./Clock\";\r\nimport Form from \"./Form\";\r\nimport Sites from \"./Sites\";\r\nimport FrequentBookmarks from \"./FrequentBookmarks\";\r\n// class ConsoleSmall extends React.Component {}\r\n// class ConsoleBig extends React.Component {}\r\nclass Console extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isToggled: false };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ isToggled: false });\r\n  }\r\n\r\n  toggle() {\r\n    this.setState((state) => ({\r\n      isToggled: !state.isToggled,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //is this ok?\r\n      <div>\r\n        <div className=\"consoleSmall\">\r\n          <div onClick={this.toggle.bind(this)}>\r\n            <Clock />\r\n          </div>\r\n\r\n          <Form />\r\n        </div>\r\n\r\n        {/* <div\r\n          className={`consoleSmall ${this.state.isToggled ? \"small\" : \"big\"}`}\r\n        >\r\n          <Sites class={`${this.state.isToggled ? \"small\" : \"big\"}`} />\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Console;\r\n","import React from \"react\";\r\nimport { Stage, Layer, Rect, Text } from \"react-konva\";\r\nimport Konva from \"konva\";\r\nclass ColoredRect extends React.Component {\r\n  state = {\r\n    color: \"green\",\r\n  };\r\n  handleClick = () => {\r\n    this.setState({\r\n      color: Konva.Util.getRandomColor(),\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Rect\r\n        x={20}\r\n        y={20}\r\n        width={50}\r\n        height={50}\r\n        fill={this.state.color}\r\n        shadowBlur={5}\r\n        onClick={this.handleClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nclass Particle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      x: this.props.X,\r\n      y: this.props.Y,\r\n      vx: this.props.velocityX,\r\n      vy: this.props.velocityY,\r\n      ax: this.props.velocityY,\r\n      ay: this.props.accelerationX,\r\n      color: Konva.Util.getRandomColor(),\r\n      //   timer: this.props.timer,\r\n    };\r\n    // console.log(this.props.X);\r\n    // this.state.timer;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => {\r\n      this.move();\r\n    }, 1000 / 60);\r\n  }\r\n  move() {\r\n    var newWidth = this.state.x + this.state.vx;\r\n    var newHeight = this.state.y + this.state.vy;\r\n    // console.log(this.state.x, this.state.y);\r\n    this.setState({\r\n      x: newWidth >= window.innerWidth ? 0 : newWidth,\r\n      y: newHeight >= window.innerHeight ? 0 : newHeight,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Rect\r\n        x={this.state.x}\r\n        y={this.state.y}\r\n        width={10}\r\n        height={10}\r\n        fill={this.state.color}\r\n      />\r\n    );\r\n  }\r\n}\r\nclass Background extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.particles = [];\r\n    for (let i = 0; i < 50; i++) {\r\n      this.particles.push(\r\n        <Particle\r\n          X={Math.random() * Math.floor(200)}\r\n          Y={Math.random() * Math.floor(200)}\r\n          velocityX={Math.random() * Math.floor(2)}\r\n          velocityY={Math.random() * Math.floor(2)}\r\n        />\r\n      );\r\n    }\r\n    // console.log(this.particles);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <Stage width={window.innerWidth} height={window.innerHeight}>\r\n        <Layer>\r\n          {/* <Text text=\"Try click on rect\" /> */}\r\n          {/* <Particle\r\n            X={500}\r\n            Y={200}\r\n            velocityX={1}\r\n            velocityY={1}\r\n            timer={this.timerID}\r\n          /> */}\r\n          {this.particles}\r\n          {/* <ColoredRect /> */}\r\n        </Layer>\r\n      </Stage>\r\n    );\r\n  }\r\n}\r\nexport default Background;\r\n// /*--------------------\r\n// Vars\r\n// --------------------*/\r\n// const deg = (a) => (Math.PI / 180) * a;\r\n// const rand = (v1, v2) => Math.floor(v1 + Math.random() * (v2 - v1));\r\n// const opt = {\r\n//   particles: window.width / 500 ? 1000 : 500,\r\n//   noiseScale: 0.009,\r\n//   angle: (Math.PI / 180) * -90,\r\n//   h1: rand(0, 360),\r\n//   h2: rand(0, 360),\r\n//   s1: rand(20, 90),\r\n//   s2: rand(20, 90),\r\n//   l1: rand(30, 80),\r\n//   l2: rand(30, 80),\r\n//   strokeWeight: 1.2,\r\n//   tail: 82,\r\n// };\r\n// const Particles = [];\r\n// let time = 0;\r\n// document.body.addEventListener(\"click\", () => {\r\n//   opt.h1 = rand(0, 360);\r\n//   opt.h2 = rand(0, 360);\r\n//   opt.s1 = rand(20, 90);\r\n//   opt.s2 = rand(20, 90);\r\n//   opt.l1 = rand(30, 80);\r\n//   opt.l2 = rand(30, 80);\r\n//   opt.angle += deg(random(60, 60)) * (Math.random() > 0.5 ? 1 : -1);\r\n\r\n//   for (let p of Particles) {\r\n//     p.randomize();\r\n//   }\r\n// });\r\n\r\n// /*--------------------\r\n// Particle\r\n// --------------------*/\r\n// class Particle {\r\n//   constructor(x, y) {\r\n//     this.x = x;\r\n//     this.y = y;\r\n//     this.lx = x;\r\n//     this.ly = y;\r\n//     this.vx = 0;\r\n//     this.vy = 0;\r\n//     this.ax = 0;\r\n//     this.ay = 0;\r\n//     this.hueSemen = Math.random();\r\n//     this.hue = this.hueSemen > 0.5 ? 20 + opt.h1 : 20 + opt.h2;\r\n//     this.sat = this.hueSemen > 0.5 ? opt.s1 : opt.s2;\r\n//     this.light = this.hueSemen > 0.5 ? opt.l1 : opt.l2;\r\n//     this.maxSpeed = this.hueSemen > 0.5 ? 3 : 2;\r\n//   }\r\n\r\n//   randomize() {\r\n//     this.hueSemen = Math.random();\r\n//     this.hue = this.hueSemen > 0.5 ? 20 + opt.h1 : 20 + opt.h2;\r\n//     this.sat = this.hueSemen > 0.5 ? opt.s1 : opt.s2;\r\n//     this.light = this.hueSemen > 0.5 ? opt.l1 : opt.l2;\r\n//     this.maxSpeed = this.hueSemen > 0.5 ? 3 : 2;\r\n//   }\r\n\r\n//   update() {\r\n//     this.follow();\r\n\r\n//     this.vx += this.ax;\r\n//     this.vy += this.ay;\r\n\r\n//     var p = Math.sqrt(this.vx * this.vx + this.vy * this.vy);\r\n//     var a = Math.atan2(this.vy, this.vx);\r\n//     var m = Math.min(this.maxSpeed, p);\r\n//     this.vx = Math.cos(a) * m;\r\n//     this.vy = Math.sin(a) * m;\r\n\r\n//     this.x += this.vx;\r\n//     this.y += this.vy;\r\n//     this.ax = 0;\r\n//     this.ay = 0;\r\n\r\n//     this.edges();\r\n//   }\r\n\r\n//   follow() {\r\n//     let angle =\r\n//       noise(\r\n//         this.x * opt.noiseScale,\r\n//         this.y * opt.noiseScale,\r\n//         time * opt.noiseScale\r\n//       ) *\r\n//         Math.PI *\r\n//         0.5 +\r\n//       opt.angle;\r\n\r\n//     this.ax += Math.cos(angle);\r\n//     this.ay += Math.sin(angle);\r\n//   }\r\n\r\n//   updatePrev() {\r\n//     this.lx = this.x;\r\n//     this.ly = this.y;\r\n//   }\r\n\r\n//   edges() {\r\n//     if (this.x < 0) {\r\n//       this.x = width;\r\n//       this.updatePrev();\r\n//     }\r\n//     if (this.x > width) {\r\n//       this.x = 0;\r\n//       this.updatePrev();\r\n//     }\r\n//     if (this.y < 0) {\r\n//       this.y = height;\r\n//       this.updatePrev();\r\n//     }\r\n//     if (this.y > height) {\r\n//       this.y = 0;\r\n//       this.updatePrev();\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     stroke(`hsla(${this.hue}, ${this.sat}%, ${this.light}%, .5)`);\r\n//     line(this.x, this.y, this.lx, this.ly);\r\n//     this.updatePrev();\r\n//   }\r\n// }\r\n\r\n// /*--------------------\r\n// Setup\r\n// --------------------*/\r\n// function setup() {\r\n//   createCanvas(windowWidth, windowHeight);\r\n//   for (let i = 0; i < opt.particles; i++) {\r\n//     Particles.push(new Particle(Math.random() * width, Math.random() * height));\r\n//   }\r\n//   strokeWeight(opt.strokeWeight);\r\n// }\r\n\r\n// /*--------------------\r\n// Draw\r\n// --------------------*/\r\n// function draw() {\r\n//   time++;\r\n//   background(0, 100 - opt.tail);\r\n\r\n//   for (let p of Particles) {\r\n//     p.update();\r\n//     p.render();\r\n//   }\r\n// }\r\n\r\n// /*--------------------\r\n// Resize\r\n// --------------------*/\r\n// function windowResized() {\r\n//   resizeCanvas(windowWidth, windowHeight);\r\n// }\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport Clock from \"./Clock\";\n// import \"./consoleSmall\";\nimport Config from \"./Config.json\";\nimport Console from \"./console\";\nimport \"./owfont-master/css/owfont-regular.css\";\nimport Background from \"./Background\";\n// const Clock = React.lazy(() => import(\"./Clock\"));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div\n        className=\"Background\"\n        style={{\n          backgroundImage: `url(${Config.background})`,\n          filter: `blur(${Config.blurStrength}px) brightness(${\n            1 - Config.dimPercentage / 100\n          })`,\n        }}\n      ></div>\n      {/* <div className=\"Clock\"> */}\n      {/* <Background /> */}\n      <Console />\n      {/* <Clock /> */}\n      {/* <div className=\"Clock\">TEXT</div> */}\n      {/* </div> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}