{"version":3,"sources":["Clock.js","FrequentBookmarks.js","Form.js","Sites.js","console.js","FirstLaunch.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","props","state","date","Date","isToggled","this","timerID","setInterval","tick","setState","clearInterval","className","class","style","color","Config","textColor","onClick","textShadow","shadowStrength","shadowColor","getHours","getMinutes","React","Component","ls","require","library","add","fab","FrequentBookmarks","listItem","get","map","site","filter","href","url","icon","size","name","isBlackingOut","fontColorContrast","isUrl","weather","Weather","setAPPID","setUnits","setCity","setCoordinate","location","temperature","description","isNight","callback","navigator","geolocation","Error","getCurrentPosition","position","getAllWeather","err","JSONObj","forceUpdate","getCurrentLocation","coords","latitude","longitude","getCurrentWeather","Math","round","main","temp","cod","error","console","log","opacity","show","Form","hidePlaceholder","_target","createRef","current","focus","e","window","open","value","preventDefault","setText","onSubmit","submitForm","bind","ref","type","onChange","ensureTextSimilarity","length","showPlaceholder","onFocus","onBlur","defaultValue","defaultText","boxShadow","backgroundColor","renderBookmarks","ListCategory","listItems","hideKeys","keyName","key","urlName","maxWidth","categoryName","ListItem","Sites","shown","background","left","top","index","list","title","_element","innerWidth","clientWidth","clientHeight","CSSTransition","in","timeout","onEnter","centerHorizontally","centerVertically","classNames","unmountOnExit","clearTimeout","stopPropagation","onInput","toggle","Console","text","handleIdleTimeout","idleTimerID","blurredState","isBlurred","setIdleTimeout","clearIdleTimeout","setTimeout","blackingOutTimeout","setSameText","FirstLaunch","default","i","Object","keys","set","values","reload","onToggle","save","App","blurred","blackingOut","document","body","addEventListener","code","setBlur","activeElement","getElementsByTagName","handleBlackingTimeout","onvisibilitychange","setBlackingTimeout","clearBlackingTimeout","blackingTimerID","setBlackingOut","backgroundImage","backdropFilter","getBlur","getDimPercent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4dc22389.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Config from \"./Config.json\";\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { date: new Date(), isToggled: false };\r\n    // this.state = { isToggled: false };\r\n    // this.state.isSmall = this.state.isSmall.bind(this);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.setState({ isSmall: false });\r\n\r\n  //   // document.getElementsByClassName(\"searchInput\")[0].value = this.state.text;\r\n  // }\r\n\r\n  // toggle() {\r\n  //   this.setState((state) => ({\r\n  //     isSmall: !state.isSmall,\r\n  //   }));\r\n  // }\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => {\r\n      this.tick();\r\n    }, 1000);\r\n    this.setState({ isToggled: false });\r\n  }\r\n\r\n  toggle() {\r\n    this.setState((state) => ({\r\n      isToggled: !state.isToggled,\r\n    }));\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n  tick() {\r\n    this.setState({ date: new Date() });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //is this ok?\r\n      <div\r\n        // className={`Clock ${this.state.isToggled ? \"small\" : \"big\"}`}\r\n        className={`Clock ${this.props.class}`}\r\n        style={{ color: Config.textColor }}\r\n        // onClick={this.toggle.bind(this)}\r\n        onClick={this.props.onClick}\r\n      >\r\n        <div\r\n          className=\"Hours\"\r\n          style={{\r\n            textShadow: `${Config.shadowStrength} ${Config.shadowColor}`,\r\n          }}\r\n        >\r\n          {(this.state.date.getHours() < 10 ? \"0\" : \"\") +\r\n            this.state.date.getHours()}{\" \"}\r\n        </div>\r\n        <div\r\n          className=\"Minutes\"\r\n          style={{\r\n            textShadow: `${Config.shadowStrength} ${Config.shadowColor}`,\r\n          }}\r\n        >\r\n          {(this.state.date.getMinutes() < 10 ? \"0\" : \"\") +\r\n            this.state.date.getMinutes()}{\" \"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Clock;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\n// import Config from \"./Config.json\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nvar ls = require(\"local-storage\");\r\n\r\nlibrary.add(fab);\r\nclass FrequentBookmarks extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.listItem = ls.get(\"frequentBookmarks\").map((site) => (\r\n      <a\r\n        key={site.url}\r\n        style={{\r\n          color: ls.get(\"iconColor\"),\r\n          filter: `drop-shadow(${ls.get(\"shadowStrength\")} ${ls.get(\r\n            \"shadowColor\"\r\n          )})`,\r\n        }}\r\n        href={site.url}\r\n        className=\"frequentBookmarkIcon\"\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={[\"fab\", site.icon]}\r\n          size={ls.get(\"frequentNameShown\") ? \"2x\" : \"3x\"}\r\n        />\r\n\r\n        {ls.get(\"frequentNameShown\") ? (\r\n          <span className=\"frequentName\">{site.name}</span>\r\n        ) : (\r\n          false\r\n        )}\r\n      </a>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`frequentBookmarks ${\r\n          this.props.isBlackingOut ? \"blackingOut blackingOutFilter\" : \"\"\r\n        }`}\r\n      >\r\n        {this.listItem}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FrequentBookmarks;\r\n","import React from \"react\";\r\n\r\nimport FrequentBookmarks from \"./FrequentBookmarks\";\r\nvar fontColorContrast = require(\"font-color-contrast\");\r\nvar isUrl = require(\"is-url\");\r\nvar weather = require(\"openweather-apis\");\r\nvar ls = require(\"local-storage\");\r\n\r\nclass Weather extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // this.props.show\r\n\r\n    weather.setAPPID(ls.get(\"weatherAPIKey\"));\r\n    weather.setUnits(ls.get(\"weatherUnit\"));\r\n    ls.get(\"weatherLocation\") !== \"auto\"\r\n      ? weather.setCity(ls.get(\"weatherLocation\"))\r\n      : weather.setCoordinate(\r\n          ls.get(\"weatherCoordinates\")[0],\r\n          ls.get(\"weatherCoordinates\")[1]\r\n        );\r\n    // console.log(this.getWeather());\r\n    // var info = this.getWeather();\r\n    // console.log(info);\r\n    this.state = {\r\n      location: null,\r\n      temperature: null,\r\n      description: null,\r\n      icon: null,\r\n      isNight: false,\r\n    };\r\n\r\n    // weather.setCoordinate(this.state.location);\r\n  }\r\n  getCurrentLocation(callback) {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        callback(position);\r\n      });\r\n    } else {\r\n      throw new Error(\"Your browser does not support geolocation.\");\r\n    }\r\n  }\r\n\r\n  getCurrentWeather(callback) {\r\n    weather.getAllWeather(function (err, JSONObj) {\r\n      // console.log(JSONObj);\r\n      callback(JSONObj);\r\n      // this.setState((state) => ({\r\n      //   temperature: JSONObj.main.temp,\r\n      // }));\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => {\r\n      this.forceUpdate();\r\n    }, 1800);\r\n    this.getCurrentLocation((callback) => {\r\n      // console.log(callback);\r\n      // console.log(callback);\r\n      this.setState((state) => ({ location: callback }));\r\n      try {\r\n        weather.setCoordinate(\r\n          this.state.location.coords.latitude,\r\n          this.state.location.coords.longitude\r\n        );\r\n        // weather.getTemperature((err, temp) => {\r\n        //   console.log(temp);\r\n        // });\r\n        // weather.getDescription((err, temp) => {\r\n        //   console.log(temp);\r\n        // });\r\n        this.getCurrentWeather((callback) => {\r\n          // console.log(callback);\r\n          this.setState((state) => ({\r\n            temperature: Math.round(callback.main.temp),\r\n            description: callback.weather[0].main,\r\n            icon: callback.cod,\r\n            isNight:\r\n              new Date().getHours() > 20 && new Date().getHours < 6\r\n                ? true\r\n                : false,\r\n          }));\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n    // return <span>{this.state.location.coords.latitude}</span>;\r\n    // // console.log(this.state.location);\r\n    // weather.getTemperature((temp) => {\r\n    //   // console.log(temp);\r\n    // });\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n  // style = {\r\n  //   color:Config.textColor,\r\n  //   filter:\"brightness(40%)\",\r\n  //   visibility: this.props.show?true:false;\r\n  // }\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"placeholderText\"\r\n        style={{\r\n          color: ls.get(\"textColor\"),\r\n          filter: \"brightness(40%)\",\r\n          opacity: this.props.show === \"true\" ? \"1\" : \"0\",\r\n        }}\r\n      >\r\n        {this.state.temperature === null ? \"\" : this.state.temperature}\r\n        <i\r\n          className={`placeholderIcon owf owf-${this.state.icon}-${\r\n            this.state.isNight ? `n` : `d`\r\n          }`}\r\n        ></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hidePlaceholder: false };\r\n    this._target = React.createRef();\r\n  }\r\n\r\n  togglePlaceholder() {\r\n    // this.setState((this.state.hidePlaceholder = !this.state.hidePlaceholder));\r\n    this.setState((state) => ({ hidePlaceholder: !state.hidePlaceholder }));\r\n  }\r\n  showPlaceholder() {\r\n    this.setState({ hidePlaceholder: false });\r\n  }\r\n  hidePlaceholder() {\r\n    this.setState({ hidePlaceholder: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._target.current.focus();\r\n  }\r\n  submitForm(e) {\r\n    // console.log(e);\r\n    // console.log(this._target.current.value);\r\n    window.open(\r\n      isUrl(this._target.current.value)\r\n        ? this._target.current.value\r\n        : ls.get(\"searchEngine\") + this._target.current.value,\r\n      \"_parent\"\r\n    );\r\n    this._target.current.value = \"\";\r\n    e.preventDefault();\r\n    // console.log();\r\n  }\r\n  ensureTextSimilarity() {\r\n    if (this._target.current) {\r\n      this.props.setText(this._target.current.value);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.submitForm.bind(this)}\r\n        className={`searchForm ${this.props.class}`}\r\n      >\r\n        {/* <i class=\"owf owf-803\"></i> */}\r\n        <div\r\n          style={{ position: \"relative\" }}\r\n          className={`${\r\n            ls.get(\"shouldBlackOutSearch\")\r\n              ? this.props.isBlackingOut\r\n                ? \"blackingOut blackingOutFilter\"\r\n                : \"\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          <input\r\n            // className={`searchInput ${this.state.isSmall ? \"small\" : \"big\"}`}\r\n            ref={this._target}\r\n            className=\"searchInput\"\r\n            type=\"text\"\r\n            // placeholder={`${this.state.hidePlaceholder ? \"\" : \"EB28\"}`}\r\n            onChange={() => {\r\n              this.ensureTextSimilarity();\r\n              if (this._target.current.value.length === 0) {\r\n                this.showPlaceholder();\r\n              } else {\r\n                this.hidePlaceholder();\r\n              }\r\n            }}\r\n            onFocus={() => {\r\n              if (this._target.current.value.length > 0) {\r\n                this.hidePlaceholder();\r\n              }\r\n            }}\r\n            // onBlur={this.togglePlaceholder.bind(this)}\r\n            onBlur={() => {\r\n              if (this._target.current.value.length === 0) {\r\n                this.showPlaceholder();\r\n                // console.log(\"focus lost\");\r\n              }\r\n            }}\r\n            // onChangeCapture={this.togglePlaceholder.bind(this)}\r\n            // onClick={this.toggle.bind(this)}\r\n            defaultValue={this.props.defaultText}\r\n            style={{\r\n              boxShadow: `${ls.get(\"shadowStrength\")} ${ls.get(\"shadowColor\")}`,\r\n              backgroundColor: `${ls.get(\"color\")}`,\r\n              color: this.state.hidePlaceholder\r\n                ? fontColorContrast(`${ls.get(\"color\")}`) === \"#ffffff\"\r\n                  ? \"#fafafa\"\r\n                  : \"#0a0a0a\"\r\n                : \"transparent\",\r\n            }}\r\n          ></input>\r\n          {this.state.hidePlaceholder ? (\r\n            <Weather show=\"false\" />\r\n          ) : (\r\n            <Weather show=\"true\" />\r\n          )}\r\n        </div>\r\n        {this.props.renderBookmarks ? (\r\n          <FrequentBookmarks isBlackingOut={this.props.isBlackingOut} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {/* <Weather /> */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","// import Config from \"./Config.json\";\r\nimport React from \"react\";\r\n// import Console from \"./console\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Clock from \"./Clock\";\r\nimport Form from \"./Form\";\r\nvar ls = require(\"local-storage\");\r\nclass ListCategory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.listItem = this.props.listItems.map(\r\n      (site) => (\r\n        // <li>\r\n        <ListItem\r\n          hideKeys={this.props.hideKeys}\r\n          key={site.url}\r\n          keyName={site.key}\r\n          name={site.name}\r\n          urlName={site.url}\r\n        />\r\n      )\r\n      // console.log(site.key)\r\n      // </li>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // console.log(Config.bookmarks.length);\r\n    return (\r\n      <li\r\n        className=\"category\"\r\n        style={{ maxWidth: `${100 / ls.get(\"bookmarks\").length - 5}%` }}\r\n      >\r\n        <h2 className=\"categoryName\">{this.props.categoryName}</h2>\r\n        {this.listItem}\r\n      </li>\r\n    );\r\n  }\r\n}\r\nclass ListItem extends React.Component {\r\n  render() {\r\n    return (\r\n      <ul>\r\n        <li className=\"command\">\r\n          <a href={this.props.urlName}>\r\n            {this.props.hideKeys ? (\r\n              \"\"\r\n            ) : (\r\n              <span className=\"commandKey\">{this.props.keyName}</span>\r\n            )}\r\n            <span className=\"commandName\">{this.props.name}</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nclass Sites extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      shown: true,\r\n      // style: {\r\n      background: `${ls.get(\"overlayColor\")}`,\r\n      left: `0px`,\r\n      top: `0px`,\r\n      hideKeys: false,\r\n      // },\r\n    };\r\n    this.listItem = ls\r\n      .get(\"bookmarks\")\r\n      .map((site, index) => (\r\n        <ListCategory\r\n          hideKeys={this.state.hideKeys}\r\n          key={site.title}\r\n          listItems={site.list}\r\n          categoryName={site.title}\r\n        />\r\n      ));\r\n    this._element = React.createRef();\r\n    // window.addEventListener(\"resize\", this.onWindowResized.bind(this));\r\n  }\r\n  componentDidUpdate() {\r\n    // console.log(this._element.current.clientHeight);\r\n    // console.log(\"udate\");\r\n    // console.log(window.innerWidth);\r\n  }\r\n  onWindowResized() {\r\n    // this.centerHorizontally();\r\n    // this.centerVertically();\r\n    // try {\r\n    //   console.log(this._element.current.clientWidth);\r\n    // } catch (e) {}\r\n\r\n    // this.forceUpdate();\r\n\r\n    if (window.innerWidth < 500) {\r\n      // console.log(window.innerWidth);\r\n      this.setState({ hideKeys: true });\r\n      // this.listItem = Config.bookmarks.map((site, index) => (\r\n      //   <ListCategory\r\n      //     hideKeys={this.state.hideKeys}\r\n      //     key={site.title}\r\n      //     listItems={site.list}\r\n      //     categoryName={site.title}\r\n      //   />\r\n      // ));\r\n      // this.forceUpdate();\r\n    } else {\r\n      this.setState({ hideKeys: false });\r\n    }\r\n  }\r\n  centerHorizontally() {\r\n    try {\r\n      this.setState({\r\n        left: `calc((100vw - ${this._element.current.clientWidth}px) / 2)`,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        left: `calc(100vw / 2 - ${50}px)`,\r\n      });\r\n    }\r\n  }\r\n  centerVertically() {\r\n    try {\r\n      this.setState({\r\n        top: `calc(100vh / 2 - ${this._element.current.clientHeight / 2}px)`,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        top: `calc(100vh / 2 - ${50}px)`,\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      // <div className=\"overlayParent\" onClick={this.props.toggle}>\r\n      // <div className=\"overlayParent\">\r\n      <CSSTransition\r\n        in={this.props.shown}\r\n        timeout={200}\r\n        onEnter={() => {\r\n          // this.setState({\r\n          //   left: `calc(100vw / 2 - ${this.centerHorizontally()}px)`,\r\n          // });\r\n          // this.setState({\r\n          //   top: `calc(100vh / 2 - ${this.centerVertically()}px)`,\r\n          // });\r\n          // console.log(`${this.centerVertically()}px`);\r\n          this.centerHorizontally();\r\n          this.centerVertically();\r\n        }}\r\n        // mountOnEnter={true}\r\n        classNames=\"overlayParent\"\r\n        unmountOnExit\r\n      >\r\n        <div\r\n          ref={this._element}\r\n          onClick={(e) => {\r\n            // onClick={(e) => {\r\n            this.props.clearTimeout();\r\n            //   e.stopPropagation();\r\n            // }}\r\n            e.stopPropagation();\r\n          }}\r\n          onInput={() => {\r\n            this.props.clearTimeout();\r\n          }}\r\n          style={{\r\n            background: `${ls.get(\"overlayColor\")}`,\r\n            boxShadow: `${ls.get(\"overlayShadowStrength\")} ${ls.get(\r\n              \"overlayShadowColor\"\r\n            )}`,\r\n            // left: this.state.left,\r\n            // top: this.state.top,\r\n          }}\r\n          // style={this.state.style}\r\n          // style={{left:}}\r\n          // className={`overlay ${this.props.class}`}\r\n          className={`overlay`}\r\n        >\r\n          {/* <ul className={`lists ${this.props.class}`}>{this.listItem}</ul> */}\r\n          <ul className={`lists`}>{this.listItem}</ul>\r\n          <Clock class=\"overlayClock\" onClick={this.props.toggle.bind(this)} />\r\n          <Form\r\n            defaultText={this.props.defaultText}\r\n            setText={this.props.setText}\r\n            class=\"overlayForm1\"\r\n          />\r\n        </div>\r\n      </CSSTransition>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sites;\r\n","import React from \"react\";\r\nimport Clock from \"./Clock\";\r\nimport Form from \"./Form\";\r\nimport Sites from \"./Sites\";\r\n// import FrequentBookmarks from \"./FrequentBookmarks\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n// import Config from \"./Config.json\";\r\nvar ls = require(\"local-storage\");\r\n// class ConsoleSmall extends React.Component {}\r\n// class ConsoleBig extends React.Component {}\r\nclass Console extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = { isToggled: this.props.isBlurred, text: \"\" };\r\n    this.state = { text: \"\" };\r\n    this.handleIdleTimeout();\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.setState({ isToggled: this.props.isBlurred });\r\n    this.idleTimerID = null;\r\n  }\r\n\r\n  toggle() {\r\n    // this.setState((state) => ({\r\n    //   isToggled: !state.isToggled,\r\n    // }));\r\n    this.props.blurredState(!this.props.isBlurred);\r\n    this.handleIdleTimeout();\r\n  }\r\n\r\n  handleIdleTimeout() {\r\n    // if (this.state.isToggled) {\r\n    // console.log(\"???\");\r\n    // clearTimeout(this.timerID);\r\n    //   this.clearTimeout();\r\n    // } else if (!this.state.isToggled) {\r\n    if (ls.get(\"timeout\") > 0) {\r\n      this.setIdleTimeout(ls.get(\"timeout\"));\r\n    }\r\n\r\n    // }\r\n  }\r\n  setIdleTimeout(value) {\r\n    this.clearIdleTimeout();\r\n    this.idleTimerID = setTimeout(() => {\r\n      // this.setState({ isToggled: false });\r\n      this.props.blurredState(false);\r\n      // this.handleBlackingTimeout();\r\n      this.props.blackingOutTimeout();\r\n    }, value);\r\n  }\r\n  clearIdleTimeout() {\r\n    // console.log(\"clear\");\r\n    if (this.idleTimerID) {\r\n      clearTimeout(this.idleTimerID);\r\n    }\r\n  }\r\n\r\n  setSameText(text) {\r\n    this.setState({ text: text });\r\n    // console.log(this.state.text);\r\n  }\r\n  render() {\r\n    return (\r\n      //is this ok?\r\n\r\n      <div>\r\n        {\r\n          /* <div\r\n          className={`consoleSmall ${this.state.isToggled ? \"small\" : \"big\"}`}\r\n        >*/\r\n          <Sites\r\n            setText={this.setSameText.bind(this)}\r\n            clearTimeout={this.handleIdleTimeout.bind(this)}\r\n            toggle={this.toggle.bind(this)}\r\n            shown={this.props.isBlurred}\r\n            defaultText={this.state.text}\r\n            // class={`${this.state.isToggled ? \"small\" : \"big\"} slideUp`}\r\n            class={`slideUp`}\r\n          />\r\n        }\r\n\r\n        <CSSTransition\r\n          // in={!this.state.isToggled}\r\n          in={!this.props.isBlurred}\r\n          timeout={200}\r\n          classNames=\"overlayForm\"\r\n          unmountOnExit\r\n        >\r\n          <div className=\"consoleSmall\">\r\n            {/* <div onClick={this.toggle.bind(this)}> */}\r\n            {/* <div> */}\r\n            <Clock class=\"backgroundClock\" onClick={this.toggle.bind(this)} />\r\n            {/* </div> */}\r\n\r\n            <Form\r\n              isBlackingOut={this.props.isBlackingOut}\r\n              defaultText={this.state.text}\r\n              setText={this.setSameText.bind(this)}\r\n              class=\"backgroundForm\"\r\n              renderBookmarks={true}\r\n            />\r\n          </div>\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Console;\r\n","import React from \"react\";\r\nimport Config from \"./Config.json\";\r\nvar ls = require(\"local-storage\");\r\n\r\nclass FirstLaunch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { default: false };\r\n  }\r\n  save() {\r\n    if (this.state.default) {\r\n      for (let i = 0; i < Object.keys(Config).length; i++) {\r\n        // console.log(Object.keys(Config)[i], Object.values(Config)[i]);\r\n        ls.set(Object.keys(Config)[i], Object.values(Config)[i]);\r\n      }\r\n      ls.set(\"firstLaunchDone\", true);\r\n    }\r\n    window.location.reload();\r\n  }\r\n  onToggle() {\r\n    // console.log(e.target.value);\r\n    this.setState({ default: !this.state.default });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"firstLaunchWindow\">\r\n        <div>\r\n          For now, please check \"default\" and click Save <br /> This will save\r\n          default values in localStorage\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"default\"\r\n            value={this.state.default}\r\n            onChange={this.onToggle.bind(this)}\r\n          ></input>\r\n          <span>Default</span>\r\n        </div>\r\n        <button onClick={this.save.bind(this)}>Save</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FirstLaunch;\r\n","// import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\n// import Clock from \"./Clock\";\r\n// import \"./consoleSmall\";\r\n// import Config from \"./Config.json\";\r\nimport Console from \"./console\";\r\nimport \"./owfont-master/css/owfont-regular.css\";\r\nimport \"./product-sans/GoogleSans.css\";\r\n// import Background from \"./Background\";\r\nimport FirstLaunch from \"./FirstLaunch\";\r\nvar ls = require(\"local-storage\");\r\n// const Clock = React.lazy(() => import(\"./Clock\"));\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { blurred: true, blackingOut: false };\r\n\r\n    //LOCAL STORAGE DIRTY \"SET\"\r\n    // for (let i = 0; i < Object.keys(Config).length; i++) {\r\n    //   // console.log(Object.keys(Config)[i], Object.values(Config)[i]);\r\n    //   ls.set(Object.keys(Config)[i], Object.values(Config)[i]);\r\n    // }\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.addEventListener(\"keydown\", (e) => {\r\n      // console.log(e.code);\r\n      if (e.code === \"Escape\") {\r\n        this.setBlur(!this.state.blurred);\r\n      }\r\n      if (document.activeElement === document.body) {\r\n        if (document.getElementsByTagName(\"input\").length > 0) {\r\n          document.getElementsByTagName(\"input\")[0].focus();\r\n        }\r\n      }\r\n    });\r\n\r\n    document.body.addEventListener(\"mousemove\", (e) => {\r\n      // console.log(\"move\");\r\n      this.setState({ blackingOut: false });\r\n      this.handleBlackingTimeout();\r\n    });\r\n    document.onvisibilitychange = (e) => {\r\n      this.setState({ blackingOut: false });\r\n      this.handleBlackingTimeout();\r\n    };\r\n  }\r\n\r\n  setBlackingOut(value) {\r\n    this.setState({ blackingOut: value });\r\n  }\r\n\r\n  handleBlackingTimeout() {\r\n    if (ls.get(\"blackingOutTimeout\") > 0) {\r\n      this.setBlackingTimeout(ls.get(\"blackingOutTimeout\"));\r\n    }\r\n  }\r\n  setBlackingTimeout(value) {\r\n    this.clearBlackingTimeout();\r\n    this.blackingTimerID = setTimeout(() => {\r\n      this.setBlackingOut(true);\r\n    }, value);\r\n  }\r\n  clearBlackingTimeout() {\r\n    // console.log(\"clear\");\r\n    if (this.blackingTimerID) {\r\n      clearTimeout(this.blackingTimerID);\r\n    }\r\n  }\r\n\r\n  setBlur(value) {\r\n    this.setState({ blurred: value });\r\n  }\r\n  getBlur() {\r\n    if (this.state.blurred) {\r\n      // return Config.blurStrength;\r\n      return ls.get(\"blurStrength\");\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  getDimPercent() {\r\n    if (this.state.blurred) {\r\n      return ls.get(\"dimPercentage\");\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // <div  className={`App ${\r\n      //   this.state.blackingOut ? \"blackingOut\" : \"\"\r\n      // }`}>\r\n\r\n      // {!ls.get(\"firstLaunchDone\")\r\n      //   <FirstLaunch />;\r\n      //   console.log(\"TODO\");\r\n      // }}\r\n      <div className=\"App\">\r\n        {!ls.get(\"firstLaunchDone\") ? (\r\n          <FirstLaunch />\r\n        ) : (\r\n          <div>\r\n            {\" \"}\r\n            <div\r\n              className=\"Background\"\r\n              style={{\r\n                backgroundImage: `url(${ls.get(\"background\")})`,\r\n                // filter: `blur(${this.getBlur()}px) brightness(${\r\n                //   1 - Config.dimPercentage / 100\r\n                // })`,\r\n              }}\r\n            ></div>\r\n            <div\r\n              className={`backgroundBlur ${\r\n                this.state.blackingOut\r\n                  ? \"blackingOut blackingOutBackground\"\r\n                  : \"\"\r\n              }`}\r\n              style={{\r\n                backdropFilter: `blur(${this.getBlur()}px) brightness(${\r\n                  1 - this.getDimPercent() / 100\r\n                })`,\r\n              }}\r\n              onClick={() => {\r\n                this.setState({ blurred: false });\r\n              }}\r\n            ></div>\r\n            {/* <div className=\"Clock\"> */}\r\n            {/* <Background /> */}\r\n            <Console\r\n              // blackingOut={this.setBlackingOut.bind(this)}\r\n              isBlackingOut={this.state.blackingOut}\r\n              blackingOutTimeout={this.handleBlackingTimeout.bind(this)}\r\n              isBlurred={this.state.blurred}\r\n              blurredState={this.setBlur.bind(this)}\r\n            />\r\n            {/* <Clock /> */}\r\n            {/* <div className=\"Clock\">TEXT</div> */}\r\n            {/* </div> */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// function App() {\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div\r\n//         className=\"Background\"\r\n//         style={{\r\n//           backgroundImage: `url(${Config.background})`,\r\n//           filter: `blur(${Config.blurStrength}px) brightness(${\r\n//             1 - Config.dimPercentage / 100\r\n//           })`,\r\n//         }}\r\n//       ></div>\r\n//       {/* <div className=\"Clock\"> */}\r\n//       {/* <Background /> */}\r\n//       <Console />\r\n//       {/* <Clock /> */}\r\n//       {/* <div className=\"Clock\">TEXT</div> */}\r\n//       {/* </div> */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}