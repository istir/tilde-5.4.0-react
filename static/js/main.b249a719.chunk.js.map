{"version":3,"sources":["logo.svg","Clock.js","FrequentBookmarks.js","Form.js","Sites.js","console.js","Background.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","props","state","date","Date","isToggled","this","timerID","setInterval","tick","setState","clearInterval","className","class","style","color","Config","textColor","onClick","textShadow","shadowStrength","shadowColor","getHours","getMinutes","React","Component","library","add","fab","FrequentBookmarks","listItem","frequentBookmarks","map","site","iconColor","filter","href","url","icon","size","frequentNameShown","name","fontColorContrast","require","isUrl","weather","Weather","setAPPID","setUnits","weatherUnit","weatherLocation","setCity","setCoordinate","location","temperature","description","isNight","callback","navigator","geolocation","Error","getCurrentPosition","position","getAllWeather","err","JSONObj","getCurrentLocation","coords","latitude","longitude","getCurrentWeather","Math","round","main","temp","cod","opacity","show","Form","hidePlaceholder","_target","createRef","current","focus","e","window","open","value","searchEngine","preventDefault","setText","onSubmit","submitForm","bind","ref","type","onChange","ensureTextSimilarity","length","showPlaceholder","onFocus","onBlur","defaultValue","defaultText","boxShadow","backgroundColor","renderBookmarks","ListCategory","listItems","hideKeys","keyName","key","urlName","maxWidth","bookmarks","categoryName","ListItem","Sites","shown","background","overlayColor","left","top","index","list","title","_element","addEventListener","onWindowResized","innerWidth","clientWidth","error","clientHeight","CSSTransition","in","timeout","onEnter","centerHorizontally","centerVertically","classNames","unmountOnExit","clearTimeout","stopPropagation","onInput","overlayShadowStrength","overlayShadowColor","toggle","Console","text","blurredState","isBlurred","handleTimeout","setIdleTimeout","setTimeout","setSameText","Particle","x","X","y","Y","vx","velocityX","vy","velocityY","ax","ay","accelerationX","Konva","Util","getRandomColor","move","newWidth","newHeight","innerHeight","width","height","fill","App","blurred","document","body","activeElement","getElementsByTagName","blurStrength","dimPercentage","backgroundImage","backdropFilter","getBlur","getDimPercent","setBlur","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b249a719.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport Config from \"./Config.json\";\r\nclass Clock extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { date: new Date(), isToggled: false };\r\n    // this.state = { isToggled: false };\r\n    // this.state.isSmall = this.state.isSmall.bind(this);\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   this.setState({ isSmall: false });\r\n\r\n  //   // document.getElementsByClassName(\"searchInput\")[0].value = this.state.text;\r\n  // }\r\n\r\n  // toggle() {\r\n  //   this.setState((state) => ({\r\n  //     isSmall: !state.isSmall,\r\n  //   }));\r\n  // }\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => {\r\n      this.tick();\r\n    }, 1000);\r\n    this.setState({ isToggled: false });\r\n  }\r\n\r\n  toggle() {\r\n    this.setState((state) => ({\r\n      isToggled: !state.isToggled,\r\n    }));\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerID);\r\n  }\r\n  tick() {\r\n    this.setState({ date: new Date() });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //is this ok?\r\n      <div\r\n        // className={`Clock ${this.state.isToggled ? \"small\" : \"big\"}`}\r\n        className={`Clock ${this.props.class}`}\r\n        style={{ color: Config.textColor }}\r\n        // onClick={this.toggle.bind(this)}\r\n        onClick={this.props.onClick}\r\n      >\r\n        <div\r\n          className=\"Hours\"\r\n          style={{\r\n            textShadow: `${Config.shadowStrength} ${Config.shadowColor}`,\r\n          }}\r\n        >\r\n          {(this.state.date.getHours() < 10 ? \"0\" : \"\") +\r\n            this.state.date.getHours()}{\" \"}\r\n        </div>\r\n        <div\r\n          className=\"Minutes\"\r\n          style={{\r\n            textShadow: `${Config.shadowStrength} ${Config.shadowColor}`,\r\n          }}\r\n        >\r\n          {(this.state.date.getMinutes() < 10 ? \"0\" : \"\") +\r\n            this.state.date.getMinutes()}{\" \"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Clock;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport Config from \"./Config.json\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\r\nlibrary.add(fab);\r\nclass FrequentBookmarks extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.listItem = Config.frequentBookmarks.map((site) => (\r\n      <a\r\n        key={site.url}\r\n        style={{\r\n          color: Config.iconColor,\r\n          filter: `drop-shadow(${Config.shadowStrength} ${Config.shadowColor})`,\r\n        }}\r\n        href={site.url}\r\n        className=\"frequentBookmarkIcon\"\r\n      >\r\n        <FontAwesomeIcon\r\n          icon={[\"fab\", site.icon]}\r\n          size={Config.frequentNameShown ? \"2x\" : \"3x\"}\r\n        />\r\n\r\n        {Config.frequentNameShown ? (\r\n          <span className=\"frequentName\">{site.name}</span>\r\n        ) : (\r\n          false\r\n        )}\r\n      </a>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"frequentBookmarks\">{this.listItem}</div>;\r\n  }\r\n}\r\nexport default FrequentBookmarks;\r\n","import React from \"react\";\r\nimport Config from \"./Config.json\";\r\nimport FrequentBookmarks from \"./FrequentBookmarks\";\r\nvar fontColorContrast = require(\"font-color-contrast\");\r\nvar isUrl = require(\"is-url\");\r\nvar weather = require(\"openweather-apis\");\r\n\r\nclass Weather extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // this.props.show\r\n\r\n    weather.setAPPID(\"fa54ebb35a166dfa6a6ef9fe7b6dcf06\");\r\n    weather.setUnits(Config.weatherUnit);\r\n    Config.weatherLocation != \"auto\"\r\n      ? weather.setCity(Config.weatherLocation)\r\n      : weather.setCoordinate(-1, 1);\r\n    // console.log(this.getWeather());\r\n    // var info = this.getWeather();\r\n    // console.log(info);\r\n    this.state = {\r\n      location: null,\r\n      temperature: null,\r\n      description: null,\r\n      icon: null,\r\n      isNight: false,\r\n    };\r\n\r\n    // weather.setCoordinate(this.state.location);\r\n  }\r\n  getCurrentLocation(callback) {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        callback(position);\r\n      });\r\n    } else {\r\n      throw new Error(\"Your browser does not support geolocation.\");\r\n    }\r\n  }\r\n\r\n  getCurrentWeather(callback) {\r\n    weather.getAllWeather(function (err, JSONObj) {\r\n      // console.log(JSONObj);\r\n      callback(JSONObj);\r\n      // this.setState((state) => ({\r\n      //   temperature: JSONObj.main.temp,\r\n      // }));\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCurrentLocation((callback) => {\r\n      // console.log(callback);\r\n      // console.log(callback);\r\n      this.setState((state) => ({ location: callback }));\r\n      weather.setCoordinate(\r\n        this.state.location.coords.latitude,\r\n        this.state.location.coords.longitude\r\n      );\r\n      // weather.getTemperature((err, temp) => {\r\n      //   console.log(temp);\r\n      // });\r\n      // weather.getDescription((err, temp) => {\r\n      //   console.log(temp);\r\n      // });\r\n      this.getCurrentWeather((callback) => {\r\n        // console.log(callback);\r\n        this.setState((state) => ({\r\n          temperature: Math.round(callback.main.temp),\r\n          description: callback.weather[0].main,\r\n          icon: callback.cod,\r\n          isNight:\r\n            new Date().getHours() > 20 && new Date().getHours < 6\r\n              ? true\r\n              : false,\r\n        }));\r\n      });\r\n    });\r\n    // return <span>{this.state.location.coords.latitude}</span>;\r\n    // // console.log(this.state.location);\r\n    // weather.getTemperature((temp) => {\r\n    //   // console.log(temp);\r\n    // });\r\n  }\r\n\r\n  // style = {\r\n  //   color:Config.textColor,\r\n  //   filter:\"brightness(40%)\",\r\n  //   visibility: this.props.show?true:false;\r\n  // }\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"placeholderText\"\r\n        style={{\r\n          color: Config.textColor,\r\n          filter: \"brightness(40%)\",\r\n          opacity: this.props.show == \"true\" ? \"1\" : \"0\",\r\n        }}\r\n      >\r\n        {this.state.temperature === null ? \"\" : this.state.temperature}\r\n        <i\r\n          className={`placeholderIcon owf owf-${this.state.icon}-${\r\n            this.state.isNight ? `n` : `d`\r\n          }`}\r\n        ></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hidePlaceholder: false };\r\n    this._target = React.createRef();\r\n  }\r\n\r\n  togglePlaceholder() {\r\n    // this.setState((this.state.hidePlaceholder = !this.state.hidePlaceholder));\r\n    this.setState((state) => ({ hidePlaceholder: !state.hidePlaceholder }));\r\n  }\r\n  showPlaceholder() {\r\n    this.setState({ hidePlaceholder: false });\r\n  }\r\n  hidePlaceholder() {\r\n    this.setState({ hidePlaceholder: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._target.current.focus();\r\n  }\r\n  submitForm(e) {\r\n    // console.log(e);\r\n    // console.log(this._target.current.value);\r\n    window.open(\r\n      isUrl(this._target.current.value)\r\n        ? this._target.current.value\r\n        : Config.searchEngine + this._target.current.value,\r\n      \"_parent\"\r\n    );\r\n    this._target.current.value = \"\";\r\n    e.preventDefault();\r\n    // console.log();\r\n  }\r\n  ensureTextSimilarity() {\r\n    if (this._target.current) {\r\n      this.props.setText(this._target.current.value);\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.submitForm.bind(this)}\r\n        className={`searchForm ${this.props.class}`}\r\n      >\r\n        {/* <i class=\"owf owf-803\"></i> */}\r\n        <div style={{ position: \"relative\" }}>\r\n          <input\r\n            // className={`searchInput ${this.state.isSmall ? \"small\" : \"big\"}`}\r\n            ref={this._target}\r\n            className=\"searchInput\"\r\n            type=\"text\"\r\n            // placeholder={`${this.state.hidePlaceholder ? \"\" : \"EB28\"}`}\r\n            onChange={() => {\r\n              this.ensureTextSimilarity();\r\n              if (this._target.current.value.length == 0) {\r\n                this.showPlaceholder();\r\n              } else {\r\n                this.hidePlaceholder();\r\n              }\r\n            }}\r\n            onFocus={() => {\r\n              if (this._target.current.value.length > 0) {\r\n                this.hidePlaceholder();\r\n              }\r\n            }}\r\n            // onBlur={this.togglePlaceholder.bind(this)}\r\n            onBlur={() => {\r\n              if (this._target.current.value.length == 0) {\r\n                this.showPlaceholder();\r\n                // console.log(\"focus lost\");\r\n              }\r\n            }}\r\n            // onChangeCapture={this.togglePlaceholder.bind(this)}\r\n            // onClick={this.toggle.bind(this)}\r\n            defaultValue={this.props.defaultText}\r\n            style={{\r\n              boxShadow: `${Config.shadowStrength} ${Config.shadowColor}`,\r\n              backgroundColor: `${Config.color}`,\r\n              color: this.state.hidePlaceholder\r\n                ? fontColorContrast(`${Config.color}`) == \"#ffffff\"\r\n                  ? \"#fafafa\"\r\n                  : \"#0a0a0a\"\r\n                : \"transparent\",\r\n            }}\r\n          ></input>\r\n          {this.state.hidePlaceholder ? (\r\n            <Weather show=\"false\" />\r\n          ) : (\r\n            <Weather show=\"true\" />\r\n          )}\r\n        </div>\r\n        {this.props.renderBookmarks ? <FrequentBookmarks /> : \"\"}\r\n        {/* <Weather /> */}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","import Config from \"./Config.json\";\r\nimport React from \"react\";\r\nimport Console from \"./console\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Clock from \"./Clock\";\r\nimport Form from \"./Form\";\r\nclass ListCategory extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.listItem = this.props.listItems.map(\r\n      (site) => (\r\n        // <li>\r\n        <ListItem\r\n          hideKeys={this.props.hideKeys}\r\n          key={site.url}\r\n          keyName={site.key}\r\n          name={site.name}\r\n          urlName={site.url}\r\n        />\r\n      )\r\n      // console.log(site.key)\r\n      // </li>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // console.log(Config.bookmarks.length);\r\n    return (\r\n      <li\r\n        className=\"category\"\r\n        style={{ maxWidth: `${100 / Config.bookmarks.length - 5}%` }}\r\n      >\r\n        <h2 className=\"categoryName\">{this.props.categoryName}</h2>\r\n        {this.listItem}\r\n      </li>\r\n    );\r\n  }\r\n}\r\nclass ListItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul>\r\n        <li className=\"command\">\r\n          <a href={this.props.urlName}>\r\n            {this.props.hideKeys ? (\r\n              \"\"\r\n            ) : (\r\n              <span className=\"commandKey\">{this.props.keyName}</span>\r\n            )}\r\n            <span className=\"commandName\">{this.props.name}</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\nclass Sites extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      shown: true,\r\n      // style: {\r\n      background: `${Config.overlayColor}`,\r\n      left: `0px`,\r\n      top: `0px`,\r\n      hideKeys: false,\r\n      // },\r\n    };\r\n    this.listItem = Config.bookmarks.map((site, index) => (\r\n      <ListCategory\r\n        hideKeys={this.state.hideKeys}\r\n        key={site.title}\r\n        listItems={site.list}\r\n        categoryName={site.title}\r\n      />\r\n    ));\r\n    this._element = React.createRef();\r\n    window.addEventListener(\"resize\", this.onWindowResized.bind(this));\r\n  }\r\n  componentDidUpdate() {\r\n    // console.log(this._element.current.clientHeight);\r\n    // console.log(\"udate\");\r\n    // console.log(window.innerWidth);\r\n  }\r\n  onWindowResized() {\r\n    // this.centerHorizontally();\r\n    // this.centerVertically();\r\n    // try {\r\n    //   console.log(this._element.current.clientWidth);\r\n    // } catch (e) {}\r\n\r\n    // this.forceUpdate();\r\n\r\n    if (window.innerWidth < 500) {\r\n      // console.log(window.innerWidth);\r\n      this.setState({ hideKeys: true });\r\n      // this.listItem = Config.bookmarks.map((site, index) => (\r\n      //   <ListCategory\r\n      //     hideKeys={this.state.hideKeys}\r\n      //     key={site.title}\r\n      //     listItems={site.list}\r\n      //     categoryName={site.title}\r\n      //   />\r\n      // ));\r\n      // this.forceUpdate();\r\n    } else {\r\n      this.setState({ hideKeys: false });\r\n    }\r\n  }\r\n  centerHorizontally() {\r\n    try {\r\n      this.setState({\r\n        left: `calc((100vw - ${this._element.current.clientWidth}px) / 2)`,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        left: `calc(100vw / 2 - ${50}px)`,\r\n      });\r\n    }\r\n  }\r\n  centerVertically() {\r\n    try {\r\n      this.setState({\r\n        top: `calc(100vh / 2 - ${this._element.current.clientHeight / 2}px)`,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        top: `calc(100vh / 2 - ${50}px)`,\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      // <div className=\"overlayParent\" onClick={this.props.toggle}>\r\n      // <div className=\"overlayParent\">\r\n      <CSSTransition\r\n        in={this.props.shown}\r\n        timeout={200}\r\n        onEnter={() => {\r\n          // this.setState({\r\n          //   left: `calc(100vw / 2 - ${this.centerHorizontally()}px)`,\r\n          // });\r\n          // this.setState({\r\n          //   top: `calc(100vh / 2 - ${this.centerVertically()}px)`,\r\n          // });\r\n          // console.log(`${this.centerVertically()}px`);\r\n          this.centerHorizontally();\r\n          this.centerVertically();\r\n        }}\r\n        // mountOnEnter={true}\r\n        classNames=\"overlayParent\"\r\n        unmountOnExit\r\n      >\r\n        <div\r\n          ref={this._element}\r\n          onClick={(e) => {\r\n            // onClick={(e) => {\r\n            this.props.clearTimeout();\r\n            //   e.stopPropagation();\r\n            // }}\r\n            e.stopPropagation();\r\n          }}\r\n          onInput={() => {\r\n            this.props.clearTimeout();\r\n          }}\r\n          style={{\r\n            background: `${Config.overlayColor}`,\r\n            boxShadow: `${Config.overlayShadowStrength} ${Config.overlayShadowColor}`,\r\n            // left: this.state.left,\r\n            // top: this.state.top,\r\n          }}\r\n          // style={this.state.style}\r\n          // style={{left:}}\r\n          // className={`overlay ${this.props.class}`}\r\n          className={`overlay`}\r\n        >\r\n          {/* <ul className={`lists ${this.props.class}`}>{this.listItem}</ul> */}\r\n          <ul className={`lists`}>{this.listItem}</ul>\r\n          <Clock class=\"overlayClock\" onClick={this.props.toggle.bind(this)} />\r\n          <Form\r\n            defaultText={this.props.defaultText}\r\n            setText={this.props.setText}\r\n            class=\"overlayForm1\"\r\n          />\r\n        </div>\r\n      </CSSTransition>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sites;\r\n","import React from \"react\";\r\nimport Clock from \"./Clock\";\r\nimport Form from \"./Form\";\r\nimport Sites from \"./Sites\";\r\nimport FrequentBookmarks from \"./FrequentBookmarks\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Config from \"./Config.json\";\r\n// class ConsoleSmall extends React.Component {}\r\n// class ConsoleBig extends React.Component {}\r\nclass Console extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = { isToggled: this.props.isBlurred, text: \"\" };\r\n    this.state = { text: \"\" };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // this.setState({ isToggled: this.props.isBlurred });\r\n    this.timerID = null;\r\n  }\r\n\r\n  toggle() {\r\n    // this.setState((state) => ({\r\n    //   isToggled: !state.isToggled,\r\n    // }));\r\n    this.props.blurredState(!this.props.isBlurred);\r\n    this.handleTimeout();\r\n  }\r\n\r\n  handleTimeout() {\r\n    // if (this.state.isToggled) {\r\n    // console.log(\"???\");\r\n    // clearTimeout(this.timerID);\r\n    //   this.clearTimeout();\r\n    // } else if (!this.state.isToggled) {\r\n    if (Config.timeout > 0) {\r\n      this.setIdleTimeout(Config.timeout);\r\n    }\r\n\r\n    // }\r\n  }\r\n  setIdleTimeout(value) {\r\n    this.clearTimeout();\r\n    this.timerID = setTimeout(() => {\r\n      // this.setState({ isToggled: false });\r\n      this.props.blurredState(false);\r\n    }, value);\r\n  }\r\n  clearTimeout() {\r\n    // console.log(\"clear\");\r\n    if (this.timerID) {\r\n      clearTimeout(this.timerID);\r\n    }\r\n  }\r\n  setSameText(text) {\r\n    this.setState({ text: text });\r\n    // console.log(this.state.text);\r\n  }\r\n  render() {\r\n    return (\r\n      //is this ok?\r\n\r\n      <div>\r\n        {\r\n          /* <div\r\n          className={`consoleSmall ${this.state.isToggled ? \"small\" : \"big\"}`}\r\n        >*/\r\n          <Sites\r\n            setText={this.setSameText.bind(this)}\r\n            clearTimeout={this.handleTimeout.bind(this)}\r\n            toggle={this.toggle.bind(this)}\r\n            shown={this.props.isBlurred}\r\n            defaultText={this.state.text}\r\n            // class={`${this.state.isToggled ? \"small\" : \"big\"} slideUp`}\r\n            class={`slideUp`}\r\n          />\r\n        }\r\n\r\n        <CSSTransition\r\n          // in={!this.state.isToggled}\r\n          in={!this.props.isBlurred}\r\n          timeout={200}\r\n          classNames=\"overlayForm\"\r\n          unmountOnExit\r\n        >\r\n          <div className=\"consoleSmall\">\r\n            {/* <div onClick={this.toggle.bind(this)}> */}\r\n            {/* <div> */}\r\n            <Clock class=\"backgroundClock\" onClick={this.toggle.bind(this)} />\r\n            {/* </div> */}\r\n\r\n            <Form\r\n              defaultText={this.state.text}\r\n              setText={this.setSameText.bind(this)}\r\n              class=\"backgroundForm\"\r\n              renderBookmarks={true}\r\n            />\r\n          </div>\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Console;\r\n","import React from \"react\";\r\nimport { Stage, Layer, Rect, Text } from \"react-konva\";\r\nimport Konva from \"konva\";\r\nclass ColoredRect extends React.Component {\r\n  state = {\r\n    color: \"green\",\r\n  };\r\n  handleClick = () => {\r\n    this.setState({\r\n      color: Konva.Util.getRandomColor(),\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Rect\r\n        x={20}\r\n        y={20}\r\n        width={50}\r\n        height={50}\r\n        fill={this.state.color}\r\n        shadowBlur={5}\r\n        onClick={this.handleClick}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nclass Particle extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      x: this.props.X,\r\n      y: this.props.Y,\r\n      vx: this.props.velocityX,\r\n      vy: this.props.velocityY,\r\n      ax: this.props.velocityY,\r\n      ay: this.props.accelerationX,\r\n      color: Konva.Util.getRandomColor(),\r\n      //   timer: this.props.timer,\r\n    };\r\n    // console.log(this.props.X);\r\n    // this.state.timer;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(() => {\r\n      this.move();\r\n    }, 1000 / 60);\r\n  }\r\n  move() {\r\n    var newWidth = this.state.x + this.state.vx;\r\n    var newHeight = this.state.y + this.state.vy;\r\n    // console.log(this.state.x, this.state.y);\r\n    this.setState({\r\n      x: newWidth >= window.innerWidth ? 0 : newWidth,\r\n      y: newHeight >= window.innerHeight ? 0 : newHeight,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Rect\r\n        x={this.state.x}\r\n        y={this.state.y}\r\n        width={10}\r\n        height={10}\r\n        fill={this.state.color}\r\n      />\r\n    );\r\n  }\r\n}\r\nclass Background extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.particles = [];\r\n    for (let i = 0; i < 50; i++) {\r\n      this.particles.push(\r\n        <Particle\r\n          X={Math.random() * Math.floor(200)}\r\n          Y={Math.random() * Math.floor(200)}\r\n          velocityX={Math.random() * Math.floor(2)}\r\n          velocityY={Math.random() * Math.floor(2)}\r\n        />\r\n      );\r\n    }\r\n    // console.log(this.particles);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    return (\r\n      <Stage width={window.innerWidth} height={window.innerHeight}>\r\n        <Layer>\r\n          {/* <Text text=\"Try click on rect\" /> */}\r\n          {/* <Particle\r\n            X={500}\r\n            Y={200}\r\n            velocityX={1}\r\n            velocityY={1}\r\n            timer={this.timerID}\r\n          /> */}\r\n          {this.particles}\r\n          {/* <ColoredRect /> */}\r\n        </Layer>\r\n      </Stage>\r\n    );\r\n  }\r\n}\r\nexport default Background;\r\n// /*--------------------\r\n// Vars\r\n// --------------------*/\r\n// const deg = (a) => (Math.PI / 180) * a;\r\n// const rand = (v1, v2) => Math.floor(v1 + Math.random() * (v2 - v1));\r\n// const opt = {\r\n//   particles: window.width / 500 ? 1000 : 500,\r\n//   noiseScale: 0.009,\r\n//   angle: (Math.PI / 180) * -90,\r\n//   h1: rand(0, 360),\r\n//   h2: rand(0, 360),\r\n//   s1: rand(20, 90),\r\n//   s2: rand(20, 90),\r\n//   l1: rand(30, 80),\r\n//   l2: rand(30, 80),\r\n//   strokeWeight: 1.2,\r\n//   tail: 82,\r\n// };\r\n// const Particles = [];\r\n// let time = 0;\r\n// document.body.addEventListener(\"click\", () => {\r\n//   opt.h1 = rand(0, 360);\r\n//   opt.h2 = rand(0, 360);\r\n//   opt.s1 = rand(20, 90);\r\n//   opt.s2 = rand(20, 90);\r\n//   opt.l1 = rand(30, 80);\r\n//   opt.l2 = rand(30, 80);\r\n//   opt.angle += deg(random(60, 60)) * (Math.random() > 0.5 ? 1 : -1);\r\n\r\n//   for (let p of Particles) {\r\n//     p.randomize();\r\n//   }\r\n// });\r\n\r\n// /*--------------------\r\n// Particle\r\n// --------------------*/\r\n// class Particle {\r\n//   constructor(x, y) {\r\n//     this.x = x;\r\n//     this.y = y;\r\n//     this.lx = x;\r\n//     this.ly = y;\r\n//     this.vx = 0;\r\n//     this.vy = 0;\r\n//     this.ax = 0;\r\n//     this.ay = 0;\r\n//     this.hueSemen = Math.random();\r\n//     this.hue = this.hueSemen > 0.5 ? 20 + opt.h1 : 20 + opt.h2;\r\n//     this.sat = this.hueSemen > 0.5 ? opt.s1 : opt.s2;\r\n//     this.light = this.hueSemen > 0.5 ? opt.l1 : opt.l2;\r\n//     this.maxSpeed = this.hueSemen > 0.5 ? 3 : 2;\r\n//   }\r\n\r\n//   randomize() {\r\n//     this.hueSemen = Math.random();\r\n//     this.hue = this.hueSemen > 0.5 ? 20 + opt.h1 : 20 + opt.h2;\r\n//     this.sat = this.hueSemen > 0.5 ? opt.s1 : opt.s2;\r\n//     this.light = this.hueSemen > 0.5 ? opt.l1 : opt.l2;\r\n//     this.maxSpeed = this.hueSemen > 0.5 ? 3 : 2;\r\n//   }\r\n\r\n//   update() {\r\n//     this.follow();\r\n\r\n//     this.vx += this.ax;\r\n//     this.vy += this.ay;\r\n\r\n//     var p = Math.sqrt(this.vx * this.vx + this.vy * this.vy);\r\n//     var a = Math.atan2(this.vy, this.vx);\r\n//     var m = Math.min(this.maxSpeed, p);\r\n//     this.vx = Math.cos(a) * m;\r\n//     this.vy = Math.sin(a) * m;\r\n\r\n//     this.x += this.vx;\r\n//     this.y += this.vy;\r\n//     this.ax = 0;\r\n//     this.ay = 0;\r\n\r\n//     this.edges();\r\n//   }\r\n\r\n//   follow() {\r\n//     let angle =\r\n//       noise(\r\n//         this.x * opt.noiseScale,\r\n//         this.y * opt.noiseScale,\r\n//         time * opt.noiseScale\r\n//       ) *\r\n//         Math.PI *\r\n//         0.5 +\r\n//       opt.angle;\r\n\r\n//     this.ax += Math.cos(angle);\r\n//     this.ay += Math.sin(angle);\r\n//   }\r\n\r\n//   updatePrev() {\r\n//     this.lx = this.x;\r\n//     this.ly = this.y;\r\n//   }\r\n\r\n//   edges() {\r\n//     if (this.x < 0) {\r\n//       this.x = width;\r\n//       this.updatePrev();\r\n//     }\r\n//     if (this.x > width) {\r\n//       this.x = 0;\r\n//       this.updatePrev();\r\n//     }\r\n//     if (this.y < 0) {\r\n//       this.y = height;\r\n//       this.updatePrev();\r\n//     }\r\n//     if (this.y > height) {\r\n//       this.y = 0;\r\n//       this.updatePrev();\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     stroke(`hsla(${this.hue}, ${this.sat}%, ${this.light}%, .5)`);\r\n//     line(this.x, this.y, this.lx, this.ly);\r\n//     this.updatePrev();\r\n//   }\r\n// }\r\n\r\n// /*--------------------\r\n// Setup\r\n// --------------------*/\r\n// function setup() {\r\n//   createCanvas(windowWidth, windowHeight);\r\n//   for (let i = 0; i < opt.particles; i++) {\r\n//     Particles.push(new Particle(Math.random() * width, Math.random() * height));\r\n//   }\r\n//   strokeWeight(opt.strokeWeight);\r\n// }\r\n\r\n// /*--------------------\r\n// Draw\r\n// --------------------*/\r\n// function draw() {\r\n//   time++;\r\n//   background(0, 100 - opt.tail);\r\n\r\n//   for (let p of Particles) {\r\n//     p.update();\r\n//     p.render();\r\n//   }\r\n// }\r\n\r\n// /*--------------------\r\n// Resize\r\n// --------------------*/\r\n// function windowResized() {\r\n//   resizeCanvas(windowWidth, windowHeight);\r\n// }\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React from \"react\";\r\nimport Clock from \"./Clock\";\r\n// import \"./consoleSmall\";\r\nimport Config from \"./Config.json\";\r\nimport Console from \"./console\";\r\nimport \"./owfont-master/css/owfont-regular.css\";\r\nimport \"./product-sans/GoogleSans.css\";\r\nimport Background from \"./Background\";\r\n// const Clock = React.lazy(() => import(\"./Clock\"));\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { blurred: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.body.addEventListener(\"keydown\", (e) => {\r\n      if (document.activeElement == document.body) {\r\n        if (document.getElementsByTagName(\"input\").length > 0) {\r\n          document.getElementsByTagName(\"input\")[0].focus();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  setBlur(value) {\r\n    this.setState({ blurred: value });\r\n  }\r\n  getBlur() {\r\n    if (this.state.blurred) {\r\n      return Config.blurStrength;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n  getDimPercent() {\r\n    if (this.state.blurred) {\r\n      return Config.dimPercentage;\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div\r\n          className=\"Background\"\r\n          style={{\r\n            backgroundImage: `url(${Config.background})`,\r\n            // filter: `blur(${this.getBlur()}px) brightness(${\r\n            //   1 - Config.dimPercentage / 100\r\n            // })`,\r\n          }}\r\n        ></div>\r\n        <div\r\n          className=\"backgroundBlur\"\r\n          style={{\r\n            backdropFilter: `blur(${this.getBlur()}px) brightness(${\r\n              1 - this.getDimPercent() / 100\r\n            })`,\r\n          }}\r\n          onClick={() => {\r\n            this.setState({ blurred: false });\r\n          }}\r\n        ></div>\r\n        {/* <div className=\"Clock\"> */}\r\n        {/* <Background /> */}\r\n        <Console\r\n          isBlurred={this.state.blurred}\r\n          blurredState={this.setBlur.bind(this)}\r\n        />\r\n        {/* <Clock /> */}\r\n        {/* <div className=\"Clock\">TEXT</div> */}\r\n        {/* </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// function App() {\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div\r\n//         className=\"Background\"\r\n//         style={{\r\n//           backgroundImage: `url(${Config.background})`,\r\n//           filter: `blur(${Config.blurStrength}px) brightness(${\r\n//             1 - Config.dimPercentage / 100\r\n//           })`,\r\n//         }}\r\n//       ></div>\r\n//       {/* <div className=\"Clock\"> */}\r\n//       {/* <Background /> */}\r\n//       <Console />\r\n//       {/* <Clock /> */}\r\n//       {/* <div className=\"Clock\">TEXT</div> */}\r\n//       {/* </div> */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}